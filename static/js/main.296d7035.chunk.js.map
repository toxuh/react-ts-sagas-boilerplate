{"version":3,"sources":["reportWebVitals.ts","common/users/types.ts","common/users/reducer.ts","store/rootReducer.ts","api/utils/axiosRequest.ts","api/constants.ts","api/utils/handleRequest.ts","api/users/index.ts","common/users/saga.ts","store/index.ts","i18n/I18nProvider.tsx","components/Badge/Badge.tsx","components/Card/Card.tsx","components/List/List.tsx","components/Modal/Modal.tsx","components/ProgressBar/ProgressBar.tsx","components/Section/Section.tsx","components/StatusIcon/StatusIcon.tsx","containers/Account/Account.tsx","containers/Campaigns/messages.ts","containers/Campaigns/Campaigns.tsx","containers/Dashboard/messages.ts","containers/Dashboard/Dashboard.tsx","containers/Exchange/Exchange.tsx","containers/Help/Help.tsx","containers/Layout/imgs/avatar.png","containers/Layout/Avatar.tsx","containers/Layout/messages.ts","containers/Layout/Sidebar.tsx","containers/Layout/Layout.tsx","containers/News/News.tsx","containers/Referrals/Referrals.tsx","containers/Store/Store.tsx","containers/App/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FETCH_USERS","FETCH_USERS_SUCCESS","FETCH_USER","FETCH_USER_SUCCESS","initialState","list","user","undefined","combineReducers","users","state","action","type","payload","config","configWithUrl","url","axios","response","data","handleRequest","call","axiosRequest","put","fetchUsersList","method","fetchUser","id","fetchUsers","fetchUserData","usersSagas","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","run","I18nProvider","children","messages","useMemo","ruMessages","locale","memo","Badge","color","className","style","backgroundColor","Card","icon","iconColor","link","title","w","width","to","href","List","items","checked","map","item","Modal","isOpened","onClose","classes","cn","hide","role","onClick","e","target","currentTarget","ProgressBar","finalColor","top","value","Math","floor","c","Section","buttonText","caption","onButtonClick","StatusIcon","name","size","Account","defineMessages","defaultMessage","createNew","started","Campaigns","intl","useIntl","useState","createNewModalOpened","toggleCreateModal","formatMessage","moment","format","balance","membership","sessions","refill","upgrade","buyMore","dailyBonuses","exchangeViews","exchangeLikes","exchangeSubscriptions","exchangeComments","levels","benefits","benefit1","nextLevel","condition1","condition2","condition3","Dashboard","Exchange","Help","Avatar","src","avatar","alt","common","dashboard","campaigns","exchange","referrals","info","news","help","Sidebar","Layout","News","Referrals","Store","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+aAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wCCPDQ,EAAc,cACdC,EAAsB,sBAEtBC,EAAa,aACbC,EAAqB,qBCCrBC,EAA0B,CACrCC,KAAM,GACNC,UAAMC,GCLOC,cAAgB,CAC7BC,MDOa,WAA+D,IAA9DC,EAA6D,uDAArDN,EAAcO,EAAuC,uCAC3E,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BACFS,GADL,IAEEL,KAAK,GAAD,mBAAMK,EAAML,MAAZ,YAAqBM,EAAOE,YAGpC,KAAKV,EACH,OAAO,2BACFO,GADL,IAEEJ,KAAK,eAAMK,EAAOE,WAItB,QACE,OAAOH,M,0CExBE,WAACI,GACd,IAAMC,EAAa,2BACdD,GADc,IAEjBE,IAAI,GAAD,OCNqB,yCDMrB,OAAoBF,EAAOE,OAGhC,OAAOC,IAAMF,GAAerB,MAAK,SAACwB,GAAD,OAAcA,EAASC,S,WELhDC,GAAV,SAAUA,EACRT,EACAG,GAFF,uEAK6D,OAL7D,kBAKmEO,YAC7DC,EACAR,GAPN,OAUI,OALMI,EALV,gBAUUK,YAAI,CAAEX,KAAK,GAAD,OAAKD,EAAL,YAAuBE,QAASK,IAVpD,gCAYWA,GAZX,OAcI,OAdJ,mCAcUK,YAAI,CACRX,KAAK,GAAD,OAAKD,EAAL,UACJE,QAAQ,EAAD,KAhBb,iCAoBS,MApBT,qDAuBeO,QCtBFI,EAAiB,kBAC5BJ,EAAcpB,EAAa,CACzBgB,IAAK,QACLS,OAAQ,SAGCC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,OACvBP,EAAclB,EAAY,CACxBc,IAAI,SAAD,OAAWW,GACdF,OAAQ,S,WCRKG,G,WAIAC,G,WAMQC,GAVlB,SAAUF,IAAV,iEACL,OADK,SACCP,YAAKG,GADN,uCAIA,SAAUK,EAAV,0EAGL,OAFAhB,EADK,EACLA,QADK,SAGCQ,YAAKK,EAAW,CAAEC,GAAId,EAAQc,KAH/B,uCAMQ,SAAUG,IAAV,iEACb,OADa,SACPC,YAAI,CACRC,YAAWhC,EAAa4B,GACxBI,YAAW9B,EAAY2B,KAHZ,uCCVf,IAAMI,EAAiBC,cAEjBC,EAAQC,YAAe,CAC3BC,QAASC,EACTC,WAAW,CAAEN,GAAH,mBAAsBO,kBAGlCP,EAAeQ,IAAIX,GAEJK,Q,gBCPTO,EAAe,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAChBC,EAAWC,mBAAQ,kBAAMC,IAAY,IAE3C,OACE,cAAC,IAAD,CAAcC,OAAO,KAAKH,SAAUA,EAApC,SACGD,KAKQK,iBAAKN,G,OCJLO,G,MANgB,SAAC,GAAD,QAAGC,aAAH,MAAW,SAAX,EAAqBP,EAArB,EAAqBA,SAArB,OAC7B,qBAAKQ,UAAU,QAAQC,MAAO,CAAEC,gBAAgB,IAAD,OAAMH,IAArD,SACGP,MC2CUW,G,MAlCe,SAAC,GAAD,IAC5BX,EAD4B,EAC5BA,SAD4B,IAE5BQ,iBAF4B,MAEhB,GAFgB,EAG5BI,EAH4B,EAG5BA,KAH4B,IAI5BC,iBAJ4B,MAIhB,SAJgB,EAK5BC,EAL4B,EAK5BA,KACAC,EAN4B,EAM5BA,MAN4B,IAO5BC,SAP4B,MAOxB,IAPwB,SAS5B,sBACER,UAAS,eAAUM,EAAO,WAAa,GAA9B,YAAoCN,GAC7CC,MAAO,CAAEQ,MAAM,GAAD,OAAKD,EAAL,MAFhB,UAIGD,GACC,8BACGH,EACC,sBAAKJ,UAAU,YAAf,UACE,cAAC,EAAD,CAAOD,MAAOM,EAAd,SAA0BD,IAC1B,6BAAKG,OAGP,6BAAKA,MAIVf,EACAc,GACC,qBAAKN,UAAU,OAAf,SACE,cAAC,IAAD,CAAMU,GAAIJ,EAAKK,KAAf,SAAsBL,EAAKC,eC/BpBK,G,OARe,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,MAAeC,eAAf,gBAC5B,oBAAId,UAAS,eAAUc,EAAU,UAAY,IAA7C,SACGD,EAAME,KAAI,SAACC,GAAD,OACT,6BAAgBA,GAAPA,U,wBCqBAC,G,OArBgB,SAAC,GAAqC,IAAnCzB,EAAkC,EAAlCA,SAAU0B,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC9CC,EAAUC,IAAG,QAAS,CAC1BC,MAAOJ,IAST,OACE,qBAAKlB,UAAWoB,EAASG,KAAK,eAAeC,QAP3B,SAACC,GACfA,EAAEC,SAAWD,EAAEE,eACjBR,KAKF,SACE,gCACE,cAAC,IAAD,CAASnB,UAAU,YAAYuB,KAAK,eAAeC,QAASL,IAC3D3B,SCEMoC,I,OAlBsB,SAAC,GAK/B,IAAD,IAJJ7B,aAII,MAJI,SAIJ,MAHJ8B,kBAGI,MAHS,SAGT,EAFJC,EAEI,EAFJA,IACAC,EACI,EADJA,MAEMvB,EAAIwB,KAAKC,MAAOF,EAAQD,EAAO,KAC/BI,EAAU,MAAN1B,EAAYqB,EAAa9B,EAEnC,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKC,MAAO,CAAEC,gBAAgB,IAAD,OAAMgC,GAAKzB,MAAM,GAAD,OAAKD,EAAL,MAA7C,UACGuB,EADH,MACaD,SCcJK,I,OAxBkB,SAAC,GAAD,IAC/BC,EAD+B,EAC/BA,WACAC,EAF+B,EAE/BA,QACA7C,EAH+B,EAG/BA,SAH+B,IAI/BQ,iBAJ+B,MAInB,GAJmB,EAK/BO,EAL+B,EAK/BA,MACA+B,EAN+B,EAM/BA,cAN+B,OAQ/B,0BAAStC,UAAU,UAAnB,UACGO,GACC,+BACGA,EACA6B,GACC,wBAAQ3E,KAAK,SAAS+D,QAASc,EAA/B,SACGF,OAKRC,GAAW,mBAAGrC,UAAU,UAAb,SAAwBqC,IACpC,sBAAMrC,UAAWA,EAAjB,SAA6BR,SCclB+C,I,OA5BqB,SAAC,GAI9B,IAEDnC,EALJoC,EAGI,EAHJA,KAGI,IAFJC,YAEI,MAFG,UAEH,MADJhF,YACI,MADG,UACH,EACE2D,EAAUC,IAAG,aAAcmB,EAAMC,EAAMhF,GAG7C,OAAQ+E,GACN,IAAK,UACHpC,EAAO,cAAC,IAAD,IACP,MACF,IAAK,WACHA,EAAO,cAAC,IAAD,IACP,MACF,IAAK,SACHA,EAAO,cAAC,IAAD,IACP,MACF,IAAK,WACHA,EAAO,cAAC,IAAD,IACP,MACF,QACEA,EAAO,cAAC,IAAD,IAGX,OAAO,qBAAKJ,UAAWoB,EAAhB,SAA0BhB,MClCpBsC,GANW,kBACxB,cAAC,GAAD,CAASL,QAAQ,uBAAuB9B,MAAM,UAA9C,4C,+CCHaoC,gBAAe,CAC5BpC,MAAO,CACL/B,GAAI,kBACJoE,eAAgB,aAElBP,QAAS,CACP7D,GAAI,oBACJoE,eAAgB,mCAElBC,UAAW,CACTrE,GAAI,sBACJoE,eAAgB,uBAElBE,QAAS,CACPtE,GAAI,oBACJoE,eAAgB,sBCgHLG,I,OAtHa,WAC1B,IAAMC,EAAOC,eADmB,EAGkBC,oBAAS,GAH3B,oBAGzBC,EAHyB,KAGHC,EAHG,KAKhC,OACE,eAAC,GAAD,CACEhB,WAAYY,EAAKK,cAAc5D,GAASoD,WACxC7C,UAAU,YACVqC,QAASW,EAAKK,cAAc5D,GAAS4C,SACrC9B,MAAOyC,EAAKK,cAAc5D,GAASc,OACnC+B,cAAe,kBAAMc,GAAkB,IALzC,UAOE,qBAAIpD,UAAU,OAAd,UACE,+BACE,qBAAKA,UAAU,SAAf,SACE,cAAC,GAAD,MAEF,sBAAKA,UAAU,UAAf,UACE,+EACA,8BACGgD,EAAKK,cAAc5D,GAASqD,SAD/B,IAC0C,IACvCQ,KAAO,uBAAuBC,OAAO,6BAG1C,qBAAKvD,UAAU,WAAf,sBACA,qBAAKA,UAAU,UAAf,SACE,wBAAQvC,KAAK,SAAb,SACE,cAAC,IAAD,WAIN,+BACE,qBAAKuC,UAAU,SAAf,SACE,cAAC,GAAD,CAAYwC,KAAK,eAEnB,sBAAKxC,UAAU,UAAf,UACE,sGAIA,8BACGgD,EAAKK,cAAc5D,GAASqD,SAD/B,IAC0C,IACvCQ,KAAO,uBAAuBC,OAAO,6BAG1C,qBAAKvD,UAAU,WAAf,uBACA,qBAAKA,UAAU,UAAf,SACE,wBAAQvC,KAAK,SAAb,SACE,cAAC,IAAD,WAIN,+BACE,qBAAKuC,UAAU,SAAf,SACE,cAAC,GAAD,CAAYwC,KAAK,aAEnB,sBAAKxC,UAAU,UAAf,UACE,0FACA,8BACGgD,EAAKK,cAAc5D,GAASqD,SAD/B,IAC0C,IACvCQ,KAAO,uBAAuBC,OAAO,6BAG1C,qBAAKvD,UAAU,WAAf,sBACA,qBAAKA,UAAU,UAAf,SACE,wBAAQvC,KAAK,SAAb,SACE,cAAC,IAAD,WAIN,+BACE,qBAAKuC,UAAU,SAAf,SACE,cAAC,GAAD,CAAYwC,KAAK,cAEnB,sBAAKxC,UAAU,UAAf,UACE,sEACA,8BACGgD,EAAKK,cAAc5D,GAASqD,SAD/B,IAC0C,IACvCQ,KAAO,uBAAuBC,OAAO,6BAG1C,qBAAKvD,UAAU,WAAf,uBACA,qBAAKA,UAAU,UAAf,SACE,wBAAQvC,KAAK,SAAb,SACE,cAAC,IAAD,WAIN,+BACE,qBAAKuC,UAAU,SAAf,SACE,cAAC,GAAD,CAAYwC,KAAK,eAEnB,sBAAKxC,UAAU,UAAf,UACE,2EACA,8BACGgD,EAAKK,cAAc5D,GAASqD,SAD/B,IAC0C,IACvCQ,KAAO,uBAAuBC,OAAO,6BAG1C,qBAAKvD,UAAU,WAAf,uBACA,qBAAKA,UAAU,UAAf,SACE,wBAAQvC,KAAK,SAAb,SACE,cAAC,IAAD,cAKR,cAAC,EAAD,CACEyD,SAAUiC,EACVhC,QAAS,kBAAMiC,GAAkB,IAFnC,SAIE,6CCzHOT,gBAAe,CAC5BpC,MAAO,CACL/B,GAAI,kBACJoE,eAAgB,aAElBP,QAAS,CACP7D,GAAI,oBACJoE,eAAgB,4CAElBY,QAAS,CACPhF,GAAI,oBACJoE,eAAgB,WAElBa,WAAY,CACVjF,GAAI,uBACJoE,eAAgB,cAElBc,SAAU,CACRlF,GAAI,qBACJoE,eAAgB,YAElBe,OAAQ,CACNnF,GAAI,mBACJoE,eAAgB,UAElBgB,QAAS,CACPpF,GAAI,oBACJoE,eAAgB,WAElBiB,QAAS,CACPrF,GAAI,oBACJoE,eAAgB,YAElBkB,aAAc,CACZtF,GAAI,yBACJoE,eAAgB,iBAElBmB,cAAe,CACbvF,GAAI,0BACJoE,eAAgB,kBAElBoB,cAAe,CACbxF,GAAI,0BACJoE,eAAgB,kBAElBqB,sBAAuB,CACrBzF,GAAI,kCACJoE,eAAgB,0BAElBsB,iBAAkB,CAChB1F,GAAI,6BACJoE,eAAgB,qBAElBuB,OAAQ,CACN3F,GAAI,mBACJoE,eAAgB,UAElBwB,SAAU,CACR5F,GAAI,qBACJoE,eAAgB,YAElByB,SAAU,CACR7F,GAAI,qBACJoE,eAAgB,mCAElB0B,UAAW,CACT9F,GAAI,sBACJoE,eAAgB,cAElB2B,WAAY,CACV/F,GAAI,uBACJoE,eAAgB,uBAElB4B,WAAY,CACVhG,GAAI,uBACJoE,eAAgB,wBAElB6B,WAAY,CACVjG,GAAI,uBACJoE,eAAgB,gBCyBL8B,I,OA1Fa,WAC1B,IAAM1B,EAAOC,eAEb,OACE,eAAC,GAAD,CACEjD,UAAU,YACVqC,QAASW,EAAKK,cAAc5D,GAAS4C,SACrC9B,MAAOyC,EAAKK,cAAc5D,GAASc,OAHrC,UAKE,cAAC,EAAD,CACEH,KAAM,cAAC,IAAD,IACNC,UAAU,SACVC,KAAM,CACJC,MAAOyC,EAAKK,cAAc5D,GAASkE,QACnChD,KAAM,mBAERJ,MAAOyC,EAAKK,cAAc5D,GAAS+D,SACnChD,EAAG,GARL,SAUE,uBAAMR,UAAU,UAAhB,UACE,cAAC,IAAD,IADF,cAKF,cAAC,EAAD,CACEI,KAAM,cAAC,IAAD,IACNE,KAAM,CACJC,MAAOyC,EAAKK,cAAc5D,GAASmE,SACnCjD,KAAM,kBAERJ,MAAOyC,EAAKK,cAAc5D,GAASgE,YACnCjD,EAAG,GAPL,SASE,sBAAMR,UAAU,UAAhB,oBAEF,cAAC,EAAD,CACEI,KAAM,cAAC,IAAD,IACNE,KAAM,CAAEC,MAAOyC,EAAKK,cAAc5D,GAASoE,SAAUlD,KAAM,UAC3DN,UAAU,SACVE,MAAOyC,EAAKK,cAAc5D,GAASiE,UACnClD,EAAG,GALL,SAOE,sBAAMR,UAAU,UAAhB,iBAEF,cAAC,EAAD,CAAMO,MAAOyC,EAAKK,cAAc5D,GAASqE,cAAzC,SACE,sBAAK9D,UAAU,QAAf,UACE,oCACE,6BAAKgD,EAAKK,cAAc5D,GAASsE,iBACjC,cAAC,GAAD,CAAajC,IAAK,IAAKC,MAAO,QAEhC,oCACE,6BAAKiB,EAAKK,cAAc5D,GAASuE,iBACjC,cAAC,GAAD,CAAalC,IAAK,GAAIC,MAAO,OAE/B,oCACE,6BAAKiB,EAAKK,cAAc5D,GAASwE,yBACjC,cAAC,GAAD,CAAanC,IAAK,GAAIC,MAAO,OAE/B,oCACE,6BAAKiB,EAAKK,cAAc5D,GAASyE,oBACjC,cAAC,GAAD,CAAapC,IAAK,GAAIC,MAAO,aAInC,eAAC,EAAD,CACE/B,UAAU,QACVI,KAAM,cAAC,IAAD,IACNC,UAAU,SACVE,MAAK,YAAOyC,EAAKK,cAAc5D,GAAS0E,SAJ1C,UAME,0BAASnE,UAAU,cAAnB,UACE,+BAAKgD,EAAKK,cAAc5D,GAAS2E,UAAjC,OACA,cAAC,EAAD,CAAMvD,MAAO,CAACmC,EAAKK,cAAc5D,GAAS4E,WAAYvD,SAAO,OAE/D,0BAASd,UAAU,cAAnB,UACE,+BAAKgD,EAAKK,cAAc5D,GAAS6E,WAAjC,OACA,cAAC,EAAD,CACEzD,MAAO,CACLmC,EAAKK,cAAc5D,GAAS8E,YAC5BvB,EAAKK,cAAc5D,GAAS+E,YAC5BxB,EAAKK,cAAc5D,GAASgF,aAE9B3D,SAAO,eCxFJ6D,GANY,kBACzB,cAAC,GAAD,CAAStC,QAAQ,uBAAuB9B,MAAM,WAA9C,oCCKaqE,GANQ,kBACrB,cAAC,GAAD,CAASvC,QAAQ,uBAAuB9B,MAAM,OAA9C,gCCLa,OAA0B,mCCqB1BsE,I,OAbU,kBACvB,0BAAS7E,UAAU,SAAnB,UACE,qBAAK8E,IAAKC,GAAQC,IAAI,iBACtB,sBAAKhF,UAAU,OAAf,UACE,sBAAMA,UAAU,OAAhB,0BACA,sBAAMA,UAAU,OAAhB,uCAEF,cAAC,IAAD,CAAMA,UAAU,WAAWU,GAAG,WAA9B,SACE,cAAC,IAAD,WCdSiC,gBAAe,CAC5BsC,OAAQ,CACNzG,GAAI,gBACJoE,eAAgB,UAElBsC,UAAW,CACT1G,GAAI,mBACJoE,eAAgB,aAElBuC,UAAW,CACT3G,GAAI,mBACJoE,eAAgB,aAElBwC,SAAU,CACR5G,GAAI,kBACJoE,eAAgB,YAElB5D,MAAO,CACLR,GAAI,eACJoE,eAAgB,SAElByC,UAAW,CACT7G,GAAI,mBACJoE,eAAgB,aAElB0C,KAAM,CACJ9G,GAAI,cACJoE,eAAgB,QAElB2C,KAAM,CACJ/G,GAAI,cACJoE,eAAgB,QAElB4C,KAAM,CACJhH,GAAI,cACJoE,eAAgB,UC4DL6C,I,OA5EW,WACxB,IAAMzC,EAAOC,eAEb,OACE,wBAAOjD,UAAU,UAAjB,UACE,cAAC,GAAD,IACA,6BAAKgD,EAAKK,cAAc5D,GAASwF,UACjC,qBAAKjF,UAAU,WAAf,SACE,+BACE,6BACE,eAAC,IAAD,CAAMU,GAAG,aAAT,UACE,cAAC,EAAD,CAAOX,MAAM,SAAb,SACE,cAAC,IAAD,MAEDiD,EAAKK,cAAc5D,GAASyF,gBAGjC,6BACE,eAAC,IAAD,CAAMxE,GAAG,aAAT,UACE,cAAC,EAAD,CAAOX,MAAM,SAAb,SACE,cAAC,IAAD,MAEDiD,EAAKK,cAAc5D,GAAS0F,gBAGjC,6BACE,eAAC,IAAD,CAAMzE,GAAG,YAAT,UACE,cAAC,EAAD,CAAOX,MAAM,SAAb,SACE,cAAC,IAAD,MAEDiD,EAAKK,cAAc5D,GAAS2F,eAGjC,6BACE,eAAC,IAAD,CAAM1E,GAAG,SAAT,UACE,cAAC,EAAD,CAAOX,MAAM,SAAb,SACE,cAAC,IAAD,MAEDiD,EAAKK,cAAc5D,GAAST,YAGjC,6BACE,eAAC,IAAD,CAAM0B,GAAG,aAAT,UACE,cAAC,EAAD,CAAOX,MAAM,SAAb,SACE,cAAC,IAAD,MAEDiD,EAAKK,cAAc5D,GAAS4F,qBAKrC,6BAAKrC,EAAKK,cAAc5D,GAAS6F,QACjC,qBAAKtF,UAAU,WAAf,SACE,+BACE,6BACE,eAAC,IAAD,CAAMU,GAAG,QAAT,UACE,cAAC,EAAD,CAAOX,MAAM,SAAb,SACE,cAAC,IAAD,MAEDiD,EAAKK,cAAc5D,GAAS8F,WAGjC,6BACE,eAAC,IAAD,CAAM7E,GAAG,QAAT,UACE,cAAC,EAAD,CAAOX,MAAM,SAAb,SACE,cAAC,IAAD,MAEDiD,EAAKK,cAAc5D,GAAS+F,qBCrE5BE,I,OATsB,SAAC,GAAkB,IAAhBlG,EAAe,EAAfA,SACtC,OACE,sBAAKQ,UAAU,SAAf,UACE,cAAC,GAAD,IACA,+BAAOR,SCJEmG,GANQ,kBACrB,cAAC,GAAD,CAAStD,QAAQ,uBAAuB9B,MAAM,OAA9C,gCCKaqF,GANa,kBAC1B,cAAC,GAAD,CAASvD,QAAQ,uBAAuB9B,MAAM,YAA9C,qCCKasF,GANS,kBACtB,cAAC,GAAD,CAASxD,QAAQ,uBAAuB9B,MAAM,QAA9C,iCC0BauF,GAlBO,WACpB,OACE,eAAC,GAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,WAAWC,UAAWtD,GAASuD,OAAK,IAChD,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWtB,GAAWuB,OAAK,IACpD,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWjD,GAAWkD,OAAK,IACpD,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWrB,GAAUsB,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWH,GAAOI,OAAK,IAC5C,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWJ,GAAWK,OAAK,IACpD,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWL,GAAMM,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWpB,GAAMqB,OAAK,OAE5C,cAAC,IAAD,CAAUvF,GAAG,mB,OCZnBwF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUpH,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,YAKRqH,SAASC,eAAe,SAM1BlK,K","file":"static/js/main.296d7035.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// TODO: Need successType() function\n\nexport const FETCH_USERS = 'FETCH_USERS';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS/SUCCESS';\n\nexport const FETCH_USER = 'FETCH_USER';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER/SUCCESS';\n\nexport type UserType = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  phone: string;\n  website: string;\n};\n\nexport type UserState = {\n  list: UserType[];\n  user: UserType | undefined;\n};\n\nexport type FetchUsersListAction = {\n  type: typeof FETCH_USERS;\n};\n\ntype SuccessFetchUsersListAction = {\n  type: typeof FETCH_USERS_SUCCESS;\n  payload: UserType[];\n};\n\nexport type FetchUserAction = {\n  type: typeof FETCH_USER;\n  payload: {\n    id: string;\n  };\n};\n\ntype SuccessFetchUserAction = {\n  type: typeof FETCH_USER_SUCCESS;\n  payload: UserType;\n};\n\nexport type UserActionTypes =\n  | FetchUsersListAction\n  | SuccessFetchUsersListAction\n  | FetchUserAction\n  | SuccessFetchUserAction;\n","import {\n  FETCH_USERS_SUCCESS,\n  FETCH_USER_SUCCESS,\n  UserActionTypes,\n  UserState,\n} from './types';\n\nexport const initialState: UserState = {\n  list: [],\n  user: undefined,\n};\n\nexport default (state = initialState, action: UserActionTypes): UserState => {\n  switch (action.type) {\n    case FETCH_USERS_SUCCESS:\n      return {\n        ...state,\n        list: [...state.list, ...action.payload],\n      };\n\n    case FETCH_USER_SUCCESS: {\n      return {\n        ...state,\n        user: { ...action.payload },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport usersReducer from '../common/users/reducer';\n\nexport default combineReducers({\n  users: usersReducer,\n});\n","import axios, { AxiosPromise, AxiosRequestConfig } from 'axios';\n\nimport { BASE_API_URL } from '../constants';\n\nexport default (config: AxiosRequestConfig): AxiosPromise => {\n  const configWithUrl = {\n    ...config,\n    url: `${BASE_API_URL}${config.url}`,\n  };\n\n  return axios(configWithUrl).then((response) => response.data);\n};\n","/* eslint-disable-next-line */\nexport const BASE_API_URL = 'https://jsonplaceholder.typicode.com/';\n","import { AxiosRequestConfig } from 'axios';\nimport { StrictEffect, call, put } from 'redux-saga/effects';\n\nimport axiosRequest from './axiosRequest';\n\nfunction* handleRequest(\n  action: string,\n  config: AxiosRequestConfig,\n): Generator<StrictEffect, null, null> {\n  try {\n    const response: ReturnType<typeof axiosRequest> | null = yield call(\n      axiosRequest,\n      config,\n    );\n\n    yield put({ type: `${action}/SUCCESS`, payload: response });\n\n    return response;\n  } catch (e) {\n    yield put({\n      type: `${action}/ERROR`,\n      payload: e,\n    });\n  }\n\n  return null;\n}\n\nexport default handleRequest;\n","import { StrictEffect } from 'redux-saga/effects';\n\nimport handleRequest from '../utils/handleRequest';\n\nimport { FETCH_USER, FETCH_USERS } from '../../common/users/types';\n\nexport const fetchUsersList = (): Generator<StrictEffect> =>\n  handleRequest(FETCH_USERS, {\n    url: 'users',\n    method: 'get',\n  });\n\nexport const fetchUser = ({ id }: { id: string }): Generator<StrictEffect> =>\n  handleRequest(FETCH_USER, {\n    url: `users/${id}`,\n    method: 'get',\n  });\n","import { StrictEffect, all, call, takeLatest } from 'redux-saga/effects';\n\nimport { fetchUser, fetchUsersList } from '../../api';\n\nimport { handleFetchUserInfo } from './actions';\nimport { FETCH_USER, FETCH_USERS } from './types';\n\nexport function* fetchUsers(): Generator<StrictEffect> {\n  yield call(fetchUsersList);\n}\n\nexport function* fetchUserData({\n  payload,\n}: ReturnType<typeof handleFetchUserInfo>): Generator<StrictEffect> {\n  yield call(fetchUser, { id: payload.id });\n}\n\nexport default function* usersSagas(): Generator {\n  yield all([\n    takeLatest(FETCH_USERS, fetchUsers),\n    takeLatest(FETCH_USER, fetchUserData),\n  ]);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\n\nimport usersSagas from '../common/users/saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware, ...getDefaultMiddleware()],\n});\n\nsagaMiddleware.run(usersSagas);\n\nexport default store;\n","import React, { ReactElement, ReactNode, memo, useMemo } from 'react';\nimport { IntlProvider } from 'react-intl';\n\nimport ruMessages from './translations/ru.json';\n\ninterface Provider {\n  children: ReactNode;\n}\n\nconst I18nProvider = ({ children }: Provider): ReactElement => {\n  const messages = useMemo(() => ruMessages, []);\n\n  return (\n    <IntlProvider locale=\"ru\" messages={messages}>\n      {children}\n    </IntlProvider>\n  );\n};\n\nexport default memo(I18nProvider);\n","import React from 'react';\n\nimport './Badge.scss';\n\ntype Props = {\n  color?: string;\n  children: React.ReactNode;\n};\n\nconst Badge: React.FC<Props> = ({ color = '36a6e3', children }) => (\n  <div className=\"Badge\" style={{ backgroundColor: `#${color}` }}>\n    {children}\n  </div>\n);\n\nexport default Badge;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Badge from '../Badge/Badge';\n\nimport './Card.scss';\n\ntype Props = {\n  children?: React.ReactNode;\n  className?: string;\n  icon?: React.ReactNode;\n  iconColor?: string;\n  link?: {\n    title: string;\n    href: string;\n  };\n  title?: string;\n  w?: number;\n};\n\nconst Card: React.FC<Props> = ({\n  children,\n  className = '',\n  icon,\n  iconColor = '32a7e2',\n  link,\n  title,\n  w = 100,\n}) => (\n  <div\n    className={`Card ${link ? 'withLink' : ''} ${className}`}\n    style={{ width: `${w}%` }}\n  >\n    {title && (\n      <div>\n        {icon ? (\n          <div className=\"WithBadge\">\n            <Badge color={iconColor}>{icon}</Badge>\n            <h3>{title}</h3>\n          </div>\n        ) : (\n          <h3>{title}</h3>\n        )}\n      </div>\n    )}\n    {children}\n    {link && (\n      <div className=\"Link\">\n        <Link to={link.href}>{link.title}</Link>\n      </div>\n    )}\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\n\nimport './List.scss';\n\ntype Props = {\n  items: string[];\n  checked?: boolean;\n};\n\nconst List: React.FC<Props> = ({ items = [], checked = false }) => (\n  <ul className={`List ${checked ? 'checked' : ''}`}>\n    {items.map((item) => (\n      <li key={item}>{item}</li>\n    ))}\n  </ul>\n);\n\nexport default List;\n","import React from 'react';\nimport cn from 'classnames';\nimport { FaTimes } from 'react-icons/fa';\n\nimport './Modal.scss';\n\ntype Props = {\n  children: React.ReactNode;\n  isOpened: boolean;\n  onClose: () => void;\n};\n\nconst Modal: React.FC<Props> = ({ children, isOpened, onClose }) => {\n  const classes = cn('Modal', {\n    hide: !isOpened,\n  });\n\n  const handleClose = (e: React.SyntheticEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className={classes} role=\"presentation\" onClick={handleClose}>\n      <div>\n        <FaTimes className=\"CloseIcon\" role=\"presentation\" onClick={onClose} />\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport './ProgressBar.scss';\n\ntype Props = {\n  color?: string;\n  finalColor?: string;\n  top: number;\n  value: number;\n};\n\nconst ProgressBar: React.FC<Props> = ({\n  color = '216fed',\n  finalColor = '22b07d',\n  top,\n  value,\n}) => {\n  const w = Math.floor((value / top) * 100);\n  const c = w === 100 ? finalColor : color;\n\n  return (\n    <div className=\"ProgressBar\">\n      <div style={{ backgroundColor: `#${c}`, width: `${w}%` }}>\n        {value} / {top}\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\n\nimport './Section.scss';\n\ntype Props = {\n  buttonText?: string;\n  caption?: string;\n  children: React.ReactNode;\n  className?: string;\n  title?: string;\n  onButtonClick?: () => void;\n};\n\nconst Section: React.FC<Props> = ({\n  buttonText,\n  caption,\n  children,\n  className = '',\n  title,\n  onButtonClick,\n}) => (\n  <section className=\"Section\">\n    {title && (\n      <h1>\n        {title}\n        {buttonText && (\n          <button type=\"button\" onClick={onButtonClick}>\n            {buttonText}\n          </button>\n        )}\n      </h1>\n    )}\n    {caption && <p className=\"Caption\">{caption}</p>}\n    <main className={className}>{children}</main>\n  </section>\n);\n\nexport default Section;\n","import React from 'react';\nimport cn from 'classnames';\nimport { FaArchive, FaCheck, FaCircle, FaPause, FaPlay } from 'react-icons/fa';\n\nimport './StatusIcon.scss';\n\n/* -light types are not implemented */\ntype Props = {\n  name?: 'success' | 'progress' | 'paused' | 'archived';\n  size?: 'small' | 'default' | 'big';\n  type?:\n    | 'square'\n    | 'rounded'\n    | 'circle'\n    | 'square-light'\n    | 'rounded-light'\n    | 'circle-light';\n};\n\nconst StatusIcon: React.FC<Props> = ({\n  name,\n  size = 'default',\n  type = 'rounded',\n}) => {\n  const classes = cn('StatusIcon', name, size, type);\n  let icon: React.ReactNode;\n\n  switch (name) {\n    case 'success':\n      icon = <FaCheck />;\n      break;\n    case 'progress':\n      icon = <FaPlay />;\n      break;\n    case 'paused':\n      icon = <FaPause />;\n      break;\n    case 'archived':\n      icon = <FaArchive />;\n      break;\n    default:\n      icon = <FaCircle />;\n  }\n\n  return <div className={classes}>{icon}</div>;\n};\n\nexport default StatusIcon;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Account: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Account\">\n    Here will be account settings\n  </Section>\n);\n\nexport default Account;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'Campaigns.title',\n    defaultMessage: 'Campaigns',\n  },\n  caption: {\n    id: 'Campaigns.caption',\n    defaultMessage: 'Here you can see your campaigns',\n  },\n  createNew: {\n    id: 'Campaigns.createNew',\n    defaultMessage: 'Create new campaign',\n  },\n  started: {\n    id: 'Campaigns.started',\n    defaultMessage: 'Campaign started',\n  },\n});\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport moment from 'moment';\nimport { FaEllipsisV } from 'react-icons/fa';\n\nimport { Modal, Section, StatusIcon } from '../../components';\n\nimport messages from './messages';\n\nimport './Campaigns.scss';\n\nconst Campaigns: React.FC = () => {\n  const intl = useIntl();\n\n  const [createNewModalOpened, toggleCreateModal] = useState(false);\n\n  return (\n    <Section\n      buttonText={intl.formatMessage(messages.createNew)}\n      className=\"Campaigns\"\n      caption={intl.formatMessage(messages.caption)}\n      title={intl.formatMessage(messages.title)}\n      onButtonClick={() => toggleCreateModal(true)}\n    >\n      <ul className=\"List\">\n        <li>\n          <div className=\"Status\">\n            <StatusIcon />\n          </div>\n          <div className=\"Heading\">\n            <h5>5 Simple Steps To An Effective VIDEO Strategy</h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 14:30:59').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">0 / 3500</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n        <li>\n          <div className=\"Status\">\n            <StatusIcon name=\"progress\" />\n          </div>\n          <div className=\"Heading\">\n            <h5>\n              These 5 Simple VIDEO Tricks Will Pump Up Your Sales Almost\n              Instantly\n            </h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 14:35:15').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">200 / 799</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n        <li>\n          <div className=\"Status\">\n            <StatusIcon name=\"paused\" />\n          </div>\n          <div className=\"Heading\">\n            <h5>Why Some People Almost Always Make/Save Money With VIDEO</h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 14:48:23').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">10 / 100</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n        <li>\n          <div className=\"Status\">\n            <StatusIcon name=\"success\" />\n          </div>\n          <div className=\"Heading\">\n            <h5>9 Ways VIDEO Can Make You Invincible</h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 15:01:34').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">500 / 500</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n        <li>\n          <div className=\"Status\">\n            <StatusIcon name=\"archived\" />\n          </div>\n          <div className=\"Heading\">\n            <h5>What Can Instagramm Teach You About VIDEO</h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 15:17:57').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">300 / 500</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n      </ul>\n      <Modal\n        isOpened={createNewModalOpened}\n        onClose={() => toggleCreateModal(false)}\n      >\n        <div>123</div>\n      </Modal>\n    </Section>\n  );\n};\n\nexport default Campaigns;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'Dashboard.title',\n    defaultMessage: 'Dashboard',\n  },\n  caption: {\n    id: 'Dashboard.caption',\n    defaultMessage: 'Here you can see your overall statistics',\n  },\n  balance: {\n    id: 'Dashboard.balance',\n    defaultMessage: 'Balance',\n  },\n  membership: {\n    id: 'Dashboard.membership',\n    defaultMessage: 'Membership',\n  },\n  sessions: {\n    id: 'Dashboard.sessions',\n    defaultMessage: 'Sessions',\n  },\n  refill: {\n    id: 'Dashboard.refill',\n    defaultMessage: 'Refill',\n  },\n  upgrade: {\n    id: 'Dashboard.upgrade',\n    defaultMessage: 'Upgrade',\n  },\n  buyMore: {\n    id: 'Dashboard.buyMore',\n    defaultMessage: 'Buy more',\n  },\n  dailyBonuses: {\n    id: 'Dashboard.dailyBonuses',\n    defaultMessage: 'Daily bonuses',\n  },\n  exchangeViews: {\n    id: 'Dashboard.exchangeViews',\n    defaultMessage: 'Exchange views',\n  },\n  exchangeLikes: {\n    id: 'Dashboard.exchangeLikes',\n    defaultMessage: 'Exchange likes',\n  },\n  exchangeSubscriptions: {\n    id: 'Dashboard.exchangeSubscriptions',\n    defaultMessage: 'Exchange subscriptions',\n  },\n  exchangeComments: {\n    id: 'Dashboard.exchangeComments',\n    defaultMessage: 'Exchange comments',\n  },\n  levels: {\n    id: 'Dashboard.levels',\n    defaultMessage: 'Levels',\n  },\n  benefits: {\n    id: 'Dashboard.benefits',\n    defaultMessage: 'Benefits',\n  },\n  benefit1: {\n    id: 'Dashboard.benefit1',\n    defaultMessage: '450 credits through daily bonus',\n  },\n  nextLevel: {\n    id: 'Dashboard.nextLevel',\n    defaultMessage: 'Next level',\n  },\n  condition1: {\n    id: 'Dashboard.condition1',\n    defaultMessage: '1000 videos watched',\n  },\n  condition2: {\n    id: 'Dashboard.condition2',\n    defaultMessage: '10 campaigns started',\n  },\n  condition3: {\n    id: 'Dashboard.condition3',\n    defaultMessage: '1 referral',\n  },\n});\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport {\n  FaClock,\n  FaDollarSign,\n  FaRubleSign,\n  FaStar,\n  FaTag,\n} from 'react-icons/fa';\n\nimport { Card, List, ProgressBar, Section } from '../../components';\n\nimport messages from './messages';\n\nimport './Dashboard.scss';\n\nconst Dashboard: React.FC = () => {\n  const intl = useIntl();\n\n  return (\n    <Section\n      className=\"Dashboard\"\n      caption={intl.formatMessage(messages.caption)}\n      title={intl.formatMessage(messages.title)}\n    >\n      <Card\n        icon={<FaDollarSign />}\n        iconColor=\"22b07d\"\n        link={{\n          title: intl.formatMessage(messages.refill),\n          href: '/account/refill',\n        }}\n        title={intl.formatMessage(messages.balance)}\n        w={31}\n      >\n        <span className=\"BigText\">\n          <FaRubleSign />\n          75 254\n        </span>\n      </Card>\n      <Card\n        icon={<FaTag />}\n        link={{\n          title: intl.formatMessage(messages.upgrade),\n          href: '/account/plans',\n        }}\n        title={intl.formatMessage(messages.membership)}\n        w={31}\n      >\n        <span className=\"BigText\">Free</span>\n      </Card>\n      <Card\n        icon={<FaClock />}\n        link={{ title: intl.formatMessage(messages.buyMore), href: '/store' }}\n        iconColor=\"ff8700\"\n        title={intl.formatMessage(messages.sessions)}\n        w={31}\n      >\n        <span className=\"BigText\">5</span>\n      </Card>\n      <Card title={intl.formatMessage(messages.dailyBonuses)}>\n        <div className=\"Daily\">\n          <section>\n            <h5>{intl.formatMessage(messages.exchangeViews)}</h5>\n            <ProgressBar top={200} value={51} />\n          </section>\n          <section>\n            <h5>{intl.formatMessage(messages.exchangeLikes)}</h5>\n            <ProgressBar top={10} value={3} />\n          </section>\n          <section>\n            <h5>{intl.formatMessage(messages.exchangeSubscriptions)}</h5>\n            <ProgressBar top={10} value={6} />\n          </section>\n          <section>\n            <h5>{intl.formatMessage(messages.exchangeComments)}</h5>\n            <ProgressBar top={10} value={10} />\n          </section>\n        </div>\n      </Card>\n      <Card\n        className=\"Level\"\n        icon={<FaStar />}\n        iconColor=\"9471f6\"\n        title={`1 ${intl.formatMessage(messages.levels)}`}\n      >\n        <article className=\"Level_group\">\n          <h5>{intl.formatMessage(messages.benefits)}:</h5>\n          <List items={[intl.formatMessage(messages.benefit1)]} checked />\n        </article>\n        <article className=\"Level_group\">\n          <h5>{intl.formatMessage(messages.nextLevel)}:</h5>\n          <List\n            items={[\n              intl.formatMessage(messages.condition1),\n              intl.formatMessage(messages.condition2),\n              intl.formatMessage(messages.condition3),\n            ]}\n            checked\n          />\n        </article>\n      </Card>\n    </Section>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Exchange: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Exchange\">\n    Here will be exchange\n  </Section>\n);\n\nexport default Exchange;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Help: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Help\">\n    Here will be help\n  </Section>\n);\n\nexport default Help;\n","export default __webpack_public_path__ + \"static/media/avatar.433db046.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaCog } from 'react-icons/fa';\n\nimport avatar from './imgs/avatar.png';\n\nimport './Avatar.scss';\n\nconst Avatar: React.FC = () => (\n  <section className=\"Avatar\">\n    <img src={avatar} alt=\"Samantha Doe\" />\n    <div className=\"Info\">\n      <span className=\"Name\">Samantha Doe</span>\n      <span className=\"Mail\">samantha.doe@gmail.com</span>\n    </div>\n    <Link className=\"Settings\" to=\"/account\">\n      <FaCog />\n    </Link>\n  </section>\n);\n\nexport default Avatar;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  common: {\n    id: 'Layout.common',\n    defaultMessage: 'Common',\n  },\n  dashboard: {\n    id: 'Layout.dashboard',\n    defaultMessage: 'Dashboard',\n  },\n  campaigns: {\n    id: 'Layout.campaigns',\n    defaultMessage: 'Campaigns',\n  },\n  exchange: {\n    id: 'Layout.exchange',\n    defaultMessage: 'Exchange',\n  },\n  store: {\n    id: 'Layout.store',\n    defaultMessage: 'Store',\n  },\n  referrals: {\n    id: 'Layout.referrals',\n    defaultMessage: 'Referrals',\n  },\n  info: {\n    id: 'Layout.info',\n    defaultMessage: 'Info',\n  },\n  news: {\n    id: 'Layout.news',\n    defaultMessage: 'News',\n  },\n  help: {\n    id: 'Layout.help',\n    defaultMessage: 'Help',\n  },\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport {\n  FaBullhorn,\n  FaExchangeAlt,\n  FaHome,\n  FaPaperPlane,\n  FaQuestion,\n  FaShoppingCart,\n  FaUsersCog,\n} from 'react-icons/fa';\n\nimport { Badge } from '../../components';\n\nimport Avatar from './Avatar';\n\nimport messages from './messages';\n\nimport './Sidebar.scss';\n\nconst Sidebar: React.FC = () => {\n  const intl = useIntl();\n\n  return (\n    <aside className=\"Sidebar\">\n      <Avatar />\n      <h4>{intl.formatMessage(messages.common)}</h4>\n      <nav className=\"SideMenu\">\n        <ul>\n          <li>\n            <Link to=\"/dashboard\">\n              <Badge color=\"716fdf\">\n                <FaHome />\n              </Badge>\n              {intl.formatMessage(messages.dashboard)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/campaigns\">\n              <Badge color=\"36a6e3\">\n                <FaPaperPlane />\n              </Badge>\n              {intl.formatMessage(messages.campaigns)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/exchange\">\n              <Badge color=\"b24cc0\">\n                <FaExchangeAlt />\n              </Badge>\n              {intl.formatMessage(messages.exchange)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/store\">\n              <Badge color=\"21b17c\">\n                <FaShoppingCart />\n              </Badge>\n              {intl.formatMessage(messages.store)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/referrals\">\n              <Badge color=\"fd840b\">\n                <FaUsersCog />\n              </Badge>\n              {intl.formatMessage(messages.referrals)}\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <h4>{intl.formatMessage(messages.info)}</h4>\n      <nav className=\"SideMenu\">\n        <ul>\n          <li>\n            <Link to=\"/news\">\n              <Badge color=\"f7727b\">\n                <FaBullhorn />\n              </Badge>\n              {intl.formatMessage(messages.news)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/help\">\n              <Badge color=\"9875f8\">\n                <FaQuestion />\n              </Badge>\n              {intl.formatMessage(messages.help)}\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\n\nimport Sidebar from './Sidebar';\n\nimport './Layout.scss';\n\ntype LayoutType = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<LayoutType> = ({ children }) => {\n  return (\n    <div className=\"Layout\">\n      <Sidebar />\n      <main>{children}</main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst News: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"News\">\n    Here will be news\n  </Section>\n);\n\nexport default News;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Referrals: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Referrals\">\n    Here will be referrals\n  </Section>\n);\n\nexport default Referrals;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Store: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Store\">\n    Here will be store\n  </Section>\n);\n\nexport default Store;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\n\nimport Account from '../Account/Account';\nimport Campaigns from '../Campaigns/Campaigns';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Exchange from '../Exchange/Exchange';\nimport Help from '../Help/Help';\nimport Layout from '../Layout/Layout';\nimport News from '../News/News';\nimport Referrals from '../Referrals/Referrals';\nimport Store from '../Store/Store';\n\nconst App: React.FC = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/account\" component={Account} exact />\n        <Route path=\"/dashboard\" component={Dashboard} exact />\n        <Route path=\"/campaigns\" component={Campaigns} exact />\n        <Route path=\"/exchange\" component={Exchange} exact />\n        <Route path=\"/store\" component={Store} exact />\n        <Route path=\"/referrals\" component={Referrals} exact />\n        <Route path=\"/news\" component={News} exact />\n        <Route path=\"/help\" component={Help} exact />\n      </Switch>\n      <Redirect to=\"/dashboard\" />\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './store';\nimport I18nProvider from './i18n/I18nProvider';\n\nimport App from './containers/App/App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <I18nProvider>\n          <App />\n        </I18nProvider>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}