{"version":3,"sources":["reportWebVitals.ts","common/users/types.ts","common/users/reducer.ts","store/rootReducer.ts","api/utils/axiosRequest.ts","api/constants.ts","api/utils/handleRequest.ts","api/users/index.ts","common/users/saga.ts","store/index.ts","i18n/I18nProvider.tsx","components/Badge/Badge.tsx","components/Section/Section.tsx","containers/Colors/Colors.tsx","containers/Components/Components.tsx","containers/Dashboard/Dashboard.tsx","containers/Forms/Forms.tsx","containers/Layout/imgs/avatar.png","containers/Layout/Avatar.tsx","containers/Layout/Sidebar.tsx","containers/Layout/Layout.tsx","containers/Settings/Settings.tsx","containers/Todo/Todo.tsx","containers/Typography/Typography.tsx","common/users/selectors.ts","containers/UserPage/useUserPage.ts","common/users/actions.ts","containers/UserPage/UserPage.tsx","containers/UsersList/useUsersList.ts","containers/UsersList/UsersList.tsx","containers/App/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FETCH_USERS","FETCH_USERS_SUCCESS","FETCH_USER","FETCH_USER_SUCCESS","initialState","list","user","undefined","combineReducers","users","state","action","type","payload","config","configWithUrl","url","axios","response","data","handleRequest","call","axiosRequest","put","fetchUsersList","method","fetchUser","id","fetchUsers","fetchUserData","usersSagas","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","run","I18nProvider","children","messages","useMemo","ruMessages","locale","memo","Badge","color","className","style","backgroundColor","Section","caption","title","Colors","Components","Dashboard","Forms","Avatar","src","avatar","alt","to","Sidebar","Layout","Settings","Todo","Typography","usersSelector","usersListSelector","createSelector","userSelector","useUserPage","dispatch","useDispatch","useSelector","useCallback","handleFetchUserInfo","UserPage","useParams","useEffect","name","username","href","email","phone","website","target","rel","useUsersList","usersList","UsersList","length","map","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wlBAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uCCPDQ,EAAc,cACdC,EAAsB,sBAEtBC,EAAa,aACbC,EAAqB,qBCCrBC,EAA0B,CACrCC,KAAM,GACNC,UAAMC,GCLOC,cAAgB,CAC7BC,MDOa,WAA+D,IAA9DC,EAA6D,uDAArDN,EAAcO,EAAuC,uCAC3E,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BACFS,GADL,IAEEL,KAAK,GAAD,mBAAMK,EAAML,MAAZ,YAAqBM,EAAOE,YAGpC,KAAKV,EACH,OAAO,2BACFO,GADL,IAEEJ,KAAK,eAAMK,EAAOE,WAItB,QACE,OAAOH,M,0CExBE,WAACI,GACd,IAAMC,EAAa,2BACdD,GADc,IAEjBE,IAAI,GAAD,OCNqB,yCDMrB,OAAoBF,EAAOE,OAGhC,OAAOC,IAAMF,GAAerB,MAAK,SAACwB,GAAD,OAAcA,EAASC,S,WELhDC,GAAV,SAAUA,EACRT,EACAG,GAFF,uEAK6D,OAL7D,kBAKmEO,YAC7DC,EACAR,GAPN,OAUI,OALMI,EALV,gBAUUK,YAAI,CAAEX,KAAK,GAAD,OAAKD,EAAL,YAAuBE,QAASK,IAVpD,gCAYWA,GAZX,OAcI,OAdJ,mCAcUK,YAAI,CACRX,KAAK,GAAD,OAAKD,EAAL,UACJE,QAAQ,EAAD,KAhBb,iCAoBS,MApBT,qDAuBeO,QCtBFI,EAAiB,kBAC5BJ,EAAcpB,EAAa,CACzBgB,IAAK,QACLS,OAAQ,SAGCC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,OACvBP,EAAclB,EAAY,CACxBc,IAAI,SAAD,OAAWW,GACdF,OAAQ,S,WCRKG,G,WAIAC,G,WAMQC,GAVlB,SAAUF,IAAV,iEACL,OADK,SACCP,YAAKG,GADN,uCAIA,SAAUK,EAAV,0EAGL,OAFAhB,EADK,EACLA,QADK,SAGCQ,YAAKK,EAAW,CAAEC,GAAId,EAAQc,KAH/B,uCAMQ,SAAUG,IAAV,iEACb,OADa,SACPC,YAAI,CACRC,YAAWhC,EAAa4B,GACxBI,YAAW9B,EAAY2B,KAHZ,uCCVf,IAAMI,EAAiBC,cAEjBC,EAAQC,YAAe,CAC3BC,QAASC,EACTC,WAAW,CAAEN,GAAH,mBAAsBO,kBAGlCP,EAAeQ,IAAIX,GAEJK,Q,gBCPTO,EAAe,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAChBC,EAAWC,mBAAQ,kBAAMC,IAAY,IAE3C,OACE,cAAC,IAAD,CAAcC,OAAO,KAAKH,SAAUA,EAApC,SACGD,KAKQK,iBAAKN,G,OCJLO,G,MANgB,SAAC,GAAD,QAAGC,aAAH,MAAW,SAAX,EAAqBP,EAArB,EAAqBA,SAArB,OAC7B,qBAAKQ,UAAU,QAAQC,MAAO,CAAEC,gBAAgB,IAAD,OAAMH,IAArD,SACGP,MCOUW,G,MARkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASZ,EAAZ,EAAYA,SAAUa,EAAtB,EAAsBA,MAAtB,OAC/B,0BAASL,UAAU,UAAnB,UACGK,GAAS,6BAAKA,IACdD,GAAW,mBAAGJ,UAAU,UAAb,SAAwBI,IACpC,+BAAOZ,SCJIc,EANU,kBACvB,cAAC,EAAD,CAASF,QAAQ,uBAAuBC,MAAM,SAA9C,kCCKaE,EANc,kBAC3B,cAAC,EAAD,CAASH,QAAQ,uBAAuBC,MAAM,aAA9C,sCCKaG,EANa,kBAC1B,cAAC,EAAD,CAASJ,QAAQ,uBAAuBC,MAAM,YAA9C,qCCKaI,EANS,kBACtB,cAAC,EAAD,CAASL,QAAQ,uBAAuBC,MAAM,QAA9C,iC,QCLa,OAA0B,mCCqB1BK,I,MAbU,kBACvB,0BAASV,UAAU,SAAnB,UACE,qBAAKW,IAAKC,GAAQC,IAAI,iBACtB,sBAAKb,UAAU,OAAf,UACE,sBAAMA,UAAU,OAAhB,0BACA,sBAAMA,UAAU,OAAhB,uCAEF,cAAC,IAAD,CAAMA,UAAU,WAAWc,GAAG,YAA9B,SACE,cAAC,IAAD,WC4ESC,I,MA1EW,WACxB,OACE,wBAAOf,UAAU,UAAjB,UACE,cAAC,GAAD,IACA,wCACA,qBAAKA,UAAU,WAAf,SACE,+BACE,6BACE,eAAC,IAAD,CAAMc,GAAG,IAAT,UACE,cAAC,EAAD,CAAOf,MAAM,SAAb,SACE,cAAC,IAAD,MAFJ,iBAOF,6BACE,eAAC,IAAD,CAAMe,GAAG,cAAT,UACE,cAAC,EAAD,CAAOf,MAAM,SAAb,SACE,cAAC,IAAD,MAFJ,kBAOF,6BACE,eAAC,IAAD,CAAMe,GAAG,UAAT,UACE,cAAC,EAAD,CAAOf,MAAM,SAAb,SACE,cAAC,IAAD,MAFJ,cAOF,6BACE,eAAC,IAAD,CAAMe,GAAG,cAAT,UACE,cAAC,EAAD,CAAOf,MAAM,SAAb,SACE,cAAC,IAAD,MAFJ,kBAOF,6BACE,eAAC,IAAD,CAAMe,GAAG,SAAT,UACE,cAAC,EAAD,CAAOf,MAAM,SAAb,SACE,cAAC,IAAD,MAFJ,kBASN,sCACA,qBAAKC,UAAU,WAAf,SACE,+BACE,6BACE,eAAC,IAAD,CAAMc,GAAG,SAAT,UACE,cAAC,EAAD,CAAOf,MAAM,SAAb,SACE,cAAC,IAAD,MAFJ,aAOF,6BACE,eAAC,IAAD,CAAMe,GAAG,QAAT,UACE,cAAC,EAAD,CAAOf,MAAM,SAAb,SACE,cAAC,IAAD,MAFJ,sBC5DGiB,I,MATsB,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SACtC,OACE,sBAAKQ,UAAU,SAAf,UACE,cAAC,GAAD,IACA,+BAAOR,SCJEyB,GANY,kBACzB,cAAC,EAAD,CAASb,QAAQ,uBAAuBC,MAAM,WAA9C,oCCKaa,GANQ,kBACrB,cAAC,EAAD,CAASd,QAAQ,uBAAuBC,MAAM,OAA9C,iCCKac,GANc,kBAC3B,cAAC,EAAD,CAASf,QAAQ,uBAAuBC,MAAM,aAA9C,sC,QCCWe,GAAgB,SAAC7D,GAAD,OAAmCA,EAAMD,OAEzD+D,GAAoBC,aAC/BF,IACA,SAAC9D,GAAD,OAAWA,EAAMJ,QAGNqE,GAAeD,aAC1BF,IACA,SAAC9D,GAAD,OAAWA,EAAMH,QCYJqE,GAfK,WAClB,IAAMC,EAAWC,cAEXvE,EAAOwE,YAAYJ,IASzB,MAAO,CAAE7C,cAPakD,uBACpB,SAACpD,GACCiD,ECR6B,SAACjD,GAAD,MAAkC,CACnEf,KAAMV,EACNW,QAAS,CAAEc,ODMEqD,CAAoBrD,MAE/B,CAACiD,IAGqBtE,SE8BX2E,I,MA/CY,WAAO,IAAD,EACCN,KAAxB9C,EADuB,EACvBA,cAAevB,EADQ,EACRA,KACfqB,EAAOuD,cAAPvD,GAMR,OAJAwD,qBAAU,WACRtD,EAAcF,KACb,IAGD,yBAASwB,UAAU,WAAnB,SACG7C,GACC,qCACE,+BACGA,EAAK8E,KADR,IACc,qCAAQ9E,EAAK+E,SAAb,UAEd,gCACE,kCACE,+BACE,wCACA,6BACE,mBAAGC,KAAI,iBAAYhF,EAAKiF,OAAxB,SAAkCjF,EAAKiF,aAG3C,+BACE,wCACA,6BAAKjF,EAAKkF,WAEZ,+BACE,0CACA,6BACE,mBACEF,KAAI,iBAAYhF,EAAKmF,SACrBC,OAAO,SACPC,IAAI,aAHN,SAKGrF,EAAKmF,2BClBXG,GAZM,WACnB,IAAMhB,EAAWC,cAEXgB,EAAYf,YAAYN,IAM9B,MAAO,CAAE5C,WAJUmD,uBAAY,WAC7BH,EFXyD,CAC3DhE,KAAMZ,MEWH,IAEkB6F,cCMRC,I,MApBa,WAAO,IAAD,EACEF,KAA1BhE,EADwB,EACxBA,WAAYiE,EADY,EACZA,UAQpB,OANAV,qBAAU,WACHU,EAAUE,QACbnE,MAED,CAACiE,IAGF,oBAAI1C,UAAU,YAAd,SACG0C,EAAUG,KAAI,SAAC1F,GAAD,OACb,6BACE,cAAC,IAAD,CAAM2D,GAAE,iBAAY3D,EAAKqB,IAAzB,SAAgCrB,EAAK8E,QAD9B9E,EAAKqB,WCaPsE,GAlBO,WACpB,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWxC,EAAWyC,OAAK,IAC3C,cAAC,IAAD,CAAOF,KAAK,cAAcC,UAAW7B,GAAY8B,OAAK,IACtD,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAW1C,EAAQ2C,OAAK,IAC9C,cAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWzC,EAAY0C,OAAK,IACtD,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWvC,EAAOwC,OAAK,IAC5C,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWL,GAAWM,OAAK,IAChD,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWlB,GAAUmB,OAAK,IACnD,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAW9B,GAAM+B,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAW/B,GAAUgC,OAAK,U,MCZ1DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUpE,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,YAKRqE,SAASC,eAAe,SAM1BlH,M","file":"static/js/main.2cdb2f74.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// TODO: Need successType() function\n\nexport const FETCH_USERS = 'FETCH_USERS';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS/SUCCESS';\n\nexport const FETCH_USER = 'FETCH_USER';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER/SUCCESS';\n\nexport type UserType = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  phone: string;\n  website: string;\n};\n\nexport type UserState = {\n  list: UserType[];\n  user: UserType | undefined;\n};\n\nexport type FetchUsersListAction = {\n  type: typeof FETCH_USERS;\n};\n\ntype SuccessFetchUsersListAction = {\n  type: typeof FETCH_USERS_SUCCESS;\n  payload: UserType[];\n};\n\nexport type FetchUserAction = {\n  type: typeof FETCH_USER;\n  payload: {\n    id: string;\n  };\n};\n\ntype SuccessFetchUserAction = {\n  type: typeof FETCH_USER_SUCCESS;\n  payload: UserType;\n};\n\nexport type UserActionTypes =\n  | FetchUsersListAction\n  | SuccessFetchUsersListAction\n  | FetchUserAction\n  | SuccessFetchUserAction;\n","import {\n  FETCH_USERS_SUCCESS,\n  FETCH_USER_SUCCESS,\n  UserActionTypes,\n  UserState,\n} from './types';\n\nexport const initialState: UserState = {\n  list: [],\n  user: undefined,\n};\n\nexport default (state = initialState, action: UserActionTypes): UserState => {\n  switch (action.type) {\n    case FETCH_USERS_SUCCESS:\n      return {\n        ...state,\n        list: [...state.list, ...action.payload],\n      };\n\n    case FETCH_USER_SUCCESS: {\n      return {\n        ...state,\n        user: { ...action.payload },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport usersReducer from '../common/users/reducer';\n\nexport default combineReducers({\n  users: usersReducer,\n});\n","import axios, { AxiosPromise, AxiosRequestConfig } from 'axios';\n\nimport { BASE_API_URL } from '../constants';\n\nexport default (config: AxiosRequestConfig): AxiosPromise => {\n  const configWithUrl = {\n    ...config,\n    url: `${BASE_API_URL}${config.url}`,\n  };\n\n  return axios(configWithUrl).then((response) => response.data);\n};\n","/* eslint-disable-next-line */\nexport const BASE_API_URL = 'https://jsonplaceholder.typicode.com/';\n","import { AxiosRequestConfig } from 'axios';\nimport { StrictEffect, call, put } from 'redux-saga/effects';\n\nimport axiosRequest from './axiosRequest';\n\nfunction* handleRequest(\n  action: string,\n  config: AxiosRequestConfig,\n): Generator<StrictEffect, null, null> {\n  try {\n    const response: ReturnType<typeof axiosRequest> | null = yield call(\n      axiosRequest,\n      config,\n    );\n\n    yield put({ type: `${action}/SUCCESS`, payload: response });\n\n    return response;\n  } catch (e) {\n    yield put({\n      type: `${action}/ERROR`,\n      payload: e,\n    });\n  }\n\n  return null;\n}\n\nexport default handleRequest;\n","import { StrictEffect } from 'redux-saga/effects';\n\nimport handleRequest from '../utils/handleRequest';\n\nimport { FETCH_USER, FETCH_USERS } from '../../common/users/types';\n\nexport const fetchUsersList = (): Generator<StrictEffect> =>\n  handleRequest(FETCH_USERS, {\n    url: 'users',\n    method: 'get',\n  });\n\nexport const fetchUser = ({ id }: { id: string }): Generator<StrictEffect> =>\n  handleRequest(FETCH_USER, {\n    url: `users/${id}`,\n    method: 'get',\n  });\n","import { StrictEffect, all, call, takeLatest } from 'redux-saga/effects';\n\nimport { fetchUser, fetchUsersList } from '../../api';\n\nimport { handleFetchUserInfo } from './actions';\nimport { FETCH_USER, FETCH_USERS } from './types';\n\nexport function* fetchUsers(): Generator<StrictEffect> {\n  yield call(fetchUsersList);\n}\n\nexport function* fetchUserData({\n  payload,\n}: ReturnType<typeof handleFetchUserInfo>): Generator<StrictEffect> {\n  yield call(fetchUser, { id: payload.id });\n}\n\nexport default function* usersSagas(): Generator {\n  yield all([\n    takeLatest(FETCH_USERS, fetchUsers),\n    takeLatest(FETCH_USER, fetchUserData),\n  ]);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\n\nimport usersSagas from '../common/users/saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware, ...getDefaultMiddleware()],\n});\n\nsagaMiddleware.run(usersSagas);\n\nexport default store;\n","import React, { ReactElement, ReactNode, memo, useMemo } from 'react';\nimport { IntlProvider } from 'react-intl';\n\nimport ruMessages from './translations/ru.json';\n\ninterface Provider {\n  children: ReactNode;\n}\n\nconst I18nProvider = ({ children }: Provider): ReactElement => {\n  const messages = useMemo(() => ruMessages, []);\n\n  return (\n    <IntlProvider locale=\"ru\" messages={messages}>\n      {children}\n    </IntlProvider>\n  );\n};\n\nexport default memo(I18nProvider);\n","import React from 'react';\n\nimport './Badge.scss';\n\ntype Props = {\n  color?: string;\n  children: React.ReactNode;\n};\n\nconst Badge: React.FC<Props> = ({ color = '36a6e3', children }) => (\n  <div className=\"Badge\" style={{ backgroundColor: `#${color}` }}>\n    {children}\n  </div>\n);\n\nexport default Badge;\n","import React from 'react';\n\nimport './Section.scss';\n\ntype Props = {\n  caption?: string;\n  children: React.ReactNode;\n  title?: string;\n};\n\nconst Section: React.FC<Props> = ({ caption, children, title }) => (\n  <section className=\"Section\">\n    {title && <h1>{title}</h1>}\n    {caption && <p className=\"Caption\">{caption}</p>}\n    <main>{children}</main>\n  </section>\n);\n\nexport default Section;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Colors: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Colors\">\n    Here will be colors\n  </Section>\n);\n\nexport default Colors;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Components: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Components\">\n    Here will be components\n  </Section>\n);\n\nexport default Components;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Dashboard: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Dashboard\">\n    Here will be dashboard\n  </Section>\n);\n\nexport default Dashboard;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Forms: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Forms\">\n    Here will be forms\n  </Section>\n);\n\nexport default Forms;\n","export default __webpack_public_path__ + \"static/media/avatar.433db046.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaCog } from 'react-icons/fa';\n\nimport avatar from './imgs/avatar.png';\n\nimport './Avatar.scss';\n\nconst Avatar: React.FC = () => (\n  <section className=\"Avatar\">\n    <img src={avatar} alt=\"Samantha Doe\" />\n    <div className=\"Info\">\n      <span className=\"Name\">Samantha Doe</span>\n      <span className=\"Mail\">samantha.doe@gmail.com</span>\n    </div>\n    <Link className=\"Settings\" to=\"/settings\">\n      <FaCog />\n    </Link>\n  </section>\n);\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  FaFont,\n  FaHome,\n  FaRocket,\n  FaSlackHash,\n  FaTable,\n  FaTasks,\n  FaUsers,\n} from 'react-icons/fa';\n\nimport { Badge } from '../../components';\n\nimport Avatar from './Avatar';\n\nimport './Sidebar.scss';\n\nconst Sidebar: React.FC = () => {\n  return (\n    <aside className=\"Sidebar\">\n      <Avatar />\n      <h4>Common</h4>\n      <nav className=\"SideMenu\">\n        <ul>\n          <li>\n            <Link to=\"/\">\n              <Badge color=\"716fdf\">\n                <FaHome />\n              </Badge>\n              Dashboard\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/typography\">\n              <Badge color=\"36a6e3\">\n                <FaFont />\n              </Badge>\n              Typography\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/colors\">\n              <Badge color=\"b24cc0\">\n                <FaSlackHash />\n              </Badge>\n              Colors\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/components\">\n              <Badge color=\"21b17c\">\n                <FaRocket />\n              </Badge>\n              Components\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/forms\">\n              <Badge color=\"fd840b\">\n                <FaTable />\n              </Badge>\n              Forms\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <h4>APIs</h4>\n      <nav className=\"SideMenu\">\n        <ul>\n          <li>\n            <Link to=\"/users\">\n              <Badge color=\"f7727b\">\n                <FaUsers />\n              </Badge>\n              Users\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/todo\">\n              <Badge color=\"9875f8\">\n                <FaTasks />\n              </Badge>\n              Todo\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\n\nimport Sidebar from './Sidebar';\n\nimport './Layout.scss';\n\ntype LayoutType = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<LayoutType> = ({ children }) => {\n  return (\n    <div className=\"Layout\">\n      <Sidebar />\n      <main>{children}</main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Settings: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Settings\">\n    Here will be settings\n  </Section>\n);\n\nexport default Settings;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Todo: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Todo\">\n    Here will be todos\n  </Section>\n);\n\nexport default Todo;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Typography: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Typography\">\n    Here will be typography\n  </Section>\n);\n\nexport default Typography;\n","import { createSelector } from 'reselect';\n\nimport { GlobalState } from '../../types';\n\nimport { UserState } from './types';\n\nexport const usersSelector = (state: GlobalState): UserState => state.users;\n\nexport const usersListSelector = createSelector(\n  usersSelector,\n  (users) => users.list,\n);\n\nexport const userSelector = createSelector(\n  usersSelector,\n  (users) => users.user,\n);\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { handleFetchUserInfo } from '../../common/users/actions';\nimport { userSelector } from '../../common/users/selectors';\nimport { UserType } from '../../common/users/types';\n\ntype UseUserPage = {\n  fetchUserData: (id: string) => void;\n  user: UserType | undefined;\n};\n\nconst useUserPage = (): UseUserPage => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(userSelector);\n\n  const fetchUserData = useCallback(\n    (id) => {\n      dispatch(handleFetchUserInfo(id));\n    },\n    [dispatch],\n  );\n\n  return { fetchUserData, user };\n};\n\nexport default useUserPage;\n","import {\n  FETCH_USER,\n  FETCH_USERS,\n  FetchUserAction,\n  FetchUsersListAction,\n} from './types';\n\nexport const handleFetchUsers = (): FetchUsersListAction => ({\n  type: FETCH_USERS,\n});\n\nexport const handleFetchUserInfo = (id: string): FetchUserAction => ({\n  type: FETCH_USER,\n  payload: { id },\n});\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nimport useUserPage from './useUserPage';\n\nimport './UserPage.scss';\n\nconst UserPage: React.FC = () => {\n  const { fetchUserData, user } = useUserPage();\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    fetchUserData(id);\n  }, []);\n\n  return (\n    <section className=\"UserPage\">\n      {user && (\n        <>\n          <h3>\n            {user.name} <span>({user.username})</span>\n          </h3>\n          <table>\n            <tbody>\n              <tr>\n                <td>Email:</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n              </tr>\n              <tr>\n                <td>Phone:</td>\n                <td>{user.phone}</td>\n              </tr>\n              <tr>\n                <td>Website:</td>\n                <td>\n                  <a\n                    href={`http://${user.website}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {user.website}\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default UserPage;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { handleFetchUsers } from '../../common/users/actions';\nimport { usersListSelector } from '../../common/users/selectors';\nimport { UserType } from '../../common/users/types';\n\ntype UseUsersListReturnType = {\n  fetchUsers: () => void;\n  usersList: UserType[];\n};\n\nconst useUsersList = (): UseUsersListReturnType => {\n  const dispatch = useDispatch();\n\n  const usersList = useSelector(usersListSelector);\n\n  const fetchUsers = useCallback(() => {\n    dispatch(handleFetchUsers());\n  }, []);\n\n  return { fetchUsers, usersList };\n};\n\nexport default useUsersList;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useUsersList from './useUsersList';\n\nimport './UsersList.scss';\n\nconst UsersList: React.FC = () => {\n  const { fetchUsers, usersList } = useUsersList();\n\n  useEffect(() => {\n    if (!usersList.length) {\n      fetchUsers();\n    }\n  }, [usersList]);\n\n  return (\n    <ul className=\"UsersList\">\n      {usersList.map((user) => (\n        <li key={user.id}>\n          <Link to={`/users/${user.id}`}>{user.name}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Colors from '../Colors/Colors';\nimport Components from '../Components/Components';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Forms from '../Forms/Forms';\nimport Layout from '../Layout/Layout';\nimport Settings from '../Settings/Settings';\nimport Todo from '../Todo/Todo';\nimport Typography from '../Typography/Typography';\nimport UserPage from '../UserPage/UserPage';\nimport UsersList from '../UsersList/UsersList';\n\nconst App: React.FC = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" component={Dashboard} exact />\n        <Route path=\"/typography\" component={Typography} exact />\n        <Route path=\"/colors\" component={Colors} exact />\n        <Route path=\"/components\" component={Components} exact />\n        <Route path=\"/forms\" component={Forms} exact />\n        <Route path=\"/users\" component={UsersList} exact />\n        <Route path=\"/users/:id\" component={UserPage} exact />\n        <Route path=\"/todo\" component={Todo} exact />\n        <Route path=\"/settings\" component={Settings} exact />\n      </Switch>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './store';\nimport I18nProvider from './i18n/I18nProvider';\n\nimport App from './containers/App/App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <I18nProvider>\n          <App />\n        </I18nProvider>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}