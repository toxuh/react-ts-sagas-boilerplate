{"version":3,"sources":["reportWebVitals.ts","common/users/types.ts","common/users/reducer.ts","store/rootReducer.ts","api/utils/axiosRequest.ts","api/constants.ts","api/utils/handleRequest.ts","api/users/index.ts","common/users/saga.ts","store/index.ts","i18n/I18nProvider.tsx","components/Badge/Badge.tsx","components/Button/Button.tsx","components/Card/Card.tsx","components/List/List.tsx","components/Modal/Modal.tsx","components/Pagination/Pagination.tsx","components/ProgressBar/ProgressBar.tsx","components/Section/Section.tsx","components/StatusIcon/StatusIcon.tsx","containers/Account/Account.tsx","containers/Forms/NewCampaign/messages.ts","containers/Forms/NewCampaign/NewCampaign.tsx","containers/Campaigns/messages.ts","containers/Campaigns/Campaigns.tsx","containers/Dashboard/messages.ts","containers/Dashboard/Dashboard.tsx","containers/Exchange/Exchange.tsx","containers/Help/Help.tsx","containers/Layout/imgs/avatar.png","containers/Layout/Avatar.tsx","containers/Layout/messages.ts","containers/Layout/Sidebar.tsx","containers/Layout/Layout.tsx","containers/News/News.tsx","containers/Referrals/Referrals.tsx","containers/Store/Store.tsx","containers/App/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FETCH_USERS","FETCH_USERS_SUCCESS","FETCH_USER","FETCH_USER_SUCCESS","initialState","list","user","undefined","combineReducers","users","state","action","type","payload","config","configWithUrl","url","axios","response","data","handleRequest","call","axiosRequest","put","fetchUsersList","method","fetchUser","id","fetchUsers","fetchUserData","usersSagas","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","run","I18nProvider","children","messages","useMemo","ruMessages","locale","memo","Badge","color","className","style","backgroundColor","Button","htmlType","onClick","classes","cn","Card","icon","iconColor","link","title","w","width","to","href","List","items","checked","map","item","Modal","isOpened","onClose","hide","role","e","target","currentTarget","Pagination","ProgressBar","finalColor","top","value","Math","floor","c","Section","buttonText","caption","onButtonClick","StatusIcon","name","size","Account","defineMessages","defaultMessage","duration","count","submit","cancel","cost","views","likes","subscribers","comments","NewCampaign","handleCloseModal","handleSubmitForm","initialValues","intl","useIntl","useFormik","onSubmit","values","handleChange","handleReset","handleSubmit","htmlFor","formatMessage","defaultValue","onBlur","placeholder","onChange","createNew","started","newCampaign","Campaigns","useState","createNewModalOpened","toggleCreateModal","moment","format","pages","console","log","balance","membership","sessions","refill","upgrade","buyMore","dailyBonuses","exchangeViews","exchangeLikes","exchangeSubscriptions","exchangeComments","levels","benefits","benefit1","nextLevel","condition1","condition2","condition3","Dashboard","Exchange","Help","Avatar","src","avatar","alt","common","dashboard","campaigns","exchange","referrals","info","news","help","Sidebar","Layout","News","Referrals","Store","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.980f8bf2.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// TODO: Need successType() function\n\nexport const FETCH_USERS = 'FETCH_USERS';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS/SUCCESS';\n\nexport const FETCH_USER = 'FETCH_USER';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER/SUCCESS';\n\nexport type UserType = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  phone: string;\n  website: string;\n};\n\nexport type UserState = {\n  list: UserType[];\n  user: UserType | undefined;\n};\n\nexport type FetchUsersListAction = {\n  type: typeof FETCH_USERS;\n};\n\ntype SuccessFetchUsersListAction = {\n  type: typeof FETCH_USERS_SUCCESS;\n  payload: UserType[];\n};\n\nexport type FetchUserAction = {\n  type: typeof FETCH_USER;\n  payload: {\n    id: string;\n  };\n};\n\ntype SuccessFetchUserAction = {\n  type: typeof FETCH_USER_SUCCESS;\n  payload: UserType;\n};\n\nexport type UserActionTypes =\n  | FetchUsersListAction\n  | SuccessFetchUsersListAction\n  | FetchUserAction\n  | SuccessFetchUserAction;\n","import {\n  FETCH_USERS_SUCCESS,\n  FETCH_USER_SUCCESS,\n  UserActionTypes,\n  UserState,\n} from './types';\n\nexport const initialState: UserState = {\n  list: [],\n  user: undefined,\n};\n\nexport default (state = initialState, action: UserActionTypes): UserState => {\n  switch (action.type) {\n    case FETCH_USERS_SUCCESS:\n      return {\n        ...state,\n        list: [...state.list, ...action.payload],\n      };\n\n    case FETCH_USER_SUCCESS: {\n      return {\n        ...state,\n        user: { ...action.payload },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport usersReducer from '../common/users/reducer';\n\nexport default combineReducers({\n  users: usersReducer,\n});\n","import axios, { AxiosPromise, AxiosRequestConfig } from 'axios';\n\nimport { BASE_API_URL } from '../constants';\n\nexport default (config: AxiosRequestConfig): AxiosPromise => {\n  const configWithUrl = {\n    ...config,\n    url: `${BASE_API_URL}${config.url}`,\n  };\n\n  return axios(configWithUrl).then((response) => response.data);\n};\n","/* eslint-disable-next-line */\nexport const BASE_API_URL = 'https://jsonplaceholder.typicode.com/';\n","import { AxiosRequestConfig } from 'axios';\nimport { StrictEffect, call, put } from 'redux-saga/effects';\n\nimport axiosRequest from './axiosRequest';\n\nfunction* handleRequest(\n  action: string,\n  config: AxiosRequestConfig,\n): Generator<StrictEffect, null, null> {\n  try {\n    const response: ReturnType<typeof axiosRequest> | null = yield call(\n      axiosRequest,\n      config,\n    );\n\n    yield put({ type: `${action}/SUCCESS`, payload: response });\n\n    return response;\n  } catch (e) {\n    yield put({\n      type: `${action}/ERROR`,\n      payload: e,\n    });\n  }\n\n  return null;\n}\n\nexport default handleRequest;\n","import { StrictEffect } from 'redux-saga/effects';\n\nimport handleRequest from '../utils/handleRequest';\n\nimport { FETCH_USER, FETCH_USERS } from '../../common/users/types';\n\nexport const fetchUsersList = (): Generator<StrictEffect> =>\n  handleRequest(FETCH_USERS, {\n    url: 'users',\n    method: 'get',\n  });\n\nexport const fetchUser = ({ id }: { id: string }): Generator<StrictEffect> =>\n  handleRequest(FETCH_USER, {\n    url: `users/${id}`,\n    method: 'get',\n  });\n","import { StrictEffect, all, call, takeLatest } from 'redux-saga/effects';\n\nimport { fetchUser, fetchUsersList } from '../../api';\n\nimport { handleFetchUserInfo } from './actions';\nimport { FETCH_USER, FETCH_USERS } from './types';\n\nexport function* fetchUsers(): Generator<StrictEffect> {\n  yield call(fetchUsersList);\n}\n\nexport function* fetchUserData({\n  payload,\n}: ReturnType<typeof handleFetchUserInfo>): Generator<StrictEffect> {\n  yield call(fetchUser, { id: payload.id });\n}\n\nexport default function* usersSagas(): Generator {\n  yield all([\n    takeLatest(FETCH_USERS, fetchUsers),\n    takeLatest(FETCH_USER, fetchUserData),\n  ]);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\n\nimport usersSagas from '../common/users/saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware, ...getDefaultMiddleware()],\n});\n\nsagaMiddleware.run(usersSagas);\n\nexport default store;\n","import React, { ReactElement, ReactNode, memo, useMemo } from 'react';\nimport { IntlProvider } from 'react-intl';\n\nimport ruMessages from './translations/ru.json';\n\ninterface Provider {\n  children: ReactNode;\n}\n\nconst I18nProvider = ({ children }: Provider): ReactElement => {\n  const messages = useMemo(() => ruMessages, []);\n\n  return (\n    <IntlProvider locale=\"ru\" messages={messages}>\n      {children}\n    </IntlProvider>\n  );\n};\n\nexport default memo(I18nProvider);\n","import React from 'react';\n\nimport './Badge.scss';\n\ntype Props = {\n  color?: string;\n  children: React.ReactNode;\n};\n\nconst Badge: React.FC<Props> = ({ color = '36a6e3', children }) => (\n  <div className=\"Badge\" style={{ backgroundColor: `#${color}` }}>\n    {children}\n  </div>\n);\n\nexport default Badge;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport './Button.scss';\n\ntype Props = {\n  children: React.ReactNode;\n  htmlType: 'button' | 'submit';\n  type?: 'default' | 'primary';\n  onClick?: () => void;\n};\n\nconst Button: React.FC<Props> = ({\n  children,\n  htmlType = 'button',\n  type = 'default',\n  onClick,\n}) => {\n  const classes = cn('Button', type);\n\n  return (\n    <button\n      className={classes}\n      type={htmlType === 'submit' ? 'submit' : 'button'}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Badge from '../Badge/Badge';\n\nimport './Card.scss';\n\ntype Props = {\n  children?: React.ReactNode;\n  className?: string;\n  icon?: React.ReactNode;\n  iconColor?: string;\n  link?: {\n    title: string;\n    href: string;\n  };\n  title?: string;\n  w?: number;\n};\n\nconst Card: React.FC<Props> = ({\n  children,\n  className = '',\n  icon,\n  iconColor = '32a7e2',\n  link,\n  title,\n  w = 100,\n}) => (\n  <div\n    className={`Card ${link ? 'withLink' : ''} ${className}`}\n    style={{ width: `${w}%` }}\n  >\n    {title && (\n      <div>\n        {icon ? (\n          <div className=\"WithBadge\">\n            <Badge color={iconColor}>{icon}</Badge>\n            <h3>{title}</h3>\n          </div>\n        ) : (\n          <h3>{title}</h3>\n        )}\n      </div>\n    )}\n    {children}\n    {link && (\n      <div className=\"Link\">\n        <Link to={link.href}>{link.title}</Link>\n      </div>\n    )}\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\n\nimport './List.scss';\n\ntype Props = {\n  items: string[];\n  checked?: boolean;\n};\n\nconst List: React.FC<Props> = ({ items = [], checked = false }) => (\n  <ul className={`List ${checked ? 'checked' : ''}`}>\n    {items.map((item) => (\n      <li key={item}>{item}</li>\n    ))}\n  </ul>\n);\n\nexport default List;\n","import React from 'react';\nimport cn from 'classnames';\nimport { FaTimes } from 'react-icons/fa';\n\nimport './Modal.scss';\n\ntype Props = {\n  children: React.ReactNode;\n  isOpened: boolean;\n  onClose: () => void;\n};\n\nconst Modal: React.FC<Props> = ({ children, isOpened, onClose }) => {\n  const classes = cn('Modal', {\n    hide: !isOpened,\n  });\n\n  const handleClose = (e: React.SyntheticEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className={classes} role=\"presentation\" onClick={handleClose}>\n      <div>\n        <FaTimes className=\"CloseIcon\" role=\"presentation\" onClick={onClose} />\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport './Pagination.scss';\n\ntype Props = {\n  currentPage?: number;\n  itemsOnPage?: number;\n  pages: number;\n};\n\nconst Pagination: React.FC<Props> = () => {\n  return (\n    <div className=\"Pagination\">\n      <ul>\n        <li className=\"active\">1</li>\n        <li>2</li>\n        <li>3</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nimport './ProgressBar.scss';\n\ntype Props = {\n  color?: string;\n  finalColor?: string;\n  top: number;\n  value: number;\n};\n\nconst ProgressBar: React.FC<Props> = ({\n  color = '216fed',\n  finalColor = '22b07d',\n  top,\n  value,\n}) => {\n  const w = Math.floor((value / top) * 100);\n  const c = w === 100 ? finalColor : color;\n\n  return (\n    <div className=\"ProgressBar\">\n      <div style={{ backgroundColor: `#${c}`, width: `${w}%` }}>\n        {value} / {top}\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\n\nimport './Section.scss';\n\ntype Props = {\n  buttonText?: string;\n  caption?: string;\n  children: React.ReactNode;\n  className?: string;\n  title?: string;\n  onButtonClick?: () => void;\n};\n\nconst Section: React.FC<Props> = ({\n  buttonText,\n  caption,\n  children,\n  className = '',\n  title,\n  onButtonClick,\n}) => (\n  <section className=\"Section\">\n    {title && (\n      <h1>\n        {title}\n        {buttonText && (\n          <button type=\"button\" onClick={onButtonClick}>\n            {buttonText}\n          </button>\n        )}\n      </h1>\n    )}\n    {caption && <p className=\"Caption\">{caption}</p>}\n    <main className={className}>{children}</main>\n  </section>\n);\n\nexport default Section;\n","import React from 'react';\nimport cn from 'classnames';\nimport { FaArchive, FaCheck, FaCircle, FaPause, FaPlay } from 'react-icons/fa';\n\nimport './StatusIcon.scss';\n\n/* -light types are not implemented */\ntype Props = {\n  name?: 'success' | 'progress' | 'paused' | 'archived';\n  size?: 'small' | 'default' | 'big';\n  type?:\n    | 'square'\n    | 'rounded'\n    | 'circle'\n    | 'square-light'\n    | 'rounded-light'\n    | 'circle-light';\n};\n\nconst StatusIcon: React.FC<Props> = ({\n  name,\n  size = 'default',\n  type = 'rounded',\n}) => {\n  const classes = cn('StatusIcon', name, size, type);\n  let icon: React.ReactNode;\n\n  switch (name) {\n    case 'success':\n      icon = <FaCheck />;\n      break;\n    case 'progress':\n      icon = <FaPlay />;\n      break;\n    case 'paused':\n      icon = <FaPause />;\n      break;\n    case 'archived':\n      icon = <FaArchive />;\n      break;\n    default:\n      icon = <FaCircle />;\n  }\n\n  return <div className={classes}>{icon}</div>;\n};\n\nexport default StatusIcon;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Account: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Account\">\n    Here will be account settings\n  </Section>\n);\n\nexport default Account;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  type: {\n    id: 'Forms.NewCampaign.type',\n    defaultMessage: 'Type',\n  },\n  link: {\n    id: 'Forms.NewCampaign.link',\n    defaultMessage: 'Youtube link',\n  },\n  duration: {\n    id: 'Forms.NewCampaign.duration',\n    defaultMessage: 'Duration',\n  },\n  count: {\n    id: 'Forms.NewCampaign.count',\n    defaultMessage: 'Count',\n  },\n  submit: {\n    id: 'Forms.NewCampaign.submit',\n    defaultMessage: 'Submit',\n  },\n  cancel: {\n    id: 'Forms.NewCampaign.cancel',\n    defaultMessage: 'Cancel',\n  },\n  cost: {\n    id: 'Forms.NewCampaign.cost',\n    defaultMessage: 'Campaign cost',\n  },\n  views: {\n    id: 'Forms.NewCampaign.views',\n    defaultMessage: 'views',\n  },\n  likes: {\n    id: 'Forms.NewCampaign.likes',\n    defaultMessage: 'likes',\n  },\n  subscribers: {\n    id: 'Forms.NewCampaign.subscribers',\n    defaultMessage: 'subscribers',\n  },\n  comments: {\n    id: 'Forms.NewCampaign.comments',\n    defaultMessage: 'comments',\n  },\n});\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useFormik } from 'formik';\n\nimport { Button } from '../../../components';\n\nimport messages from './messages';\n\nimport './NewCampaign.scss';\n\ntype Props = {\n  handleCloseModal: () => void;\n  handleSubmitForm: (data: Record<string, unknown>) => void;\n  initialValues?: {\n    count: number;\n    link: string;\n    duration: number;\n    type: 'views' | 'likes' | 'subscribers' | 'comments';\n  };\n};\n\nconst NewCampaign: React.FC<Props> = ({\n  handleCloseModal,\n  handleSubmitForm,\n  initialValues = {\n    count: 0,\n    link: '',\n    duration: 0,\n    type: 'views',\n  },\n}) => {\n  const intl = useIntl();\n\n  const { values, handleChange, handleReset, handleSubmit } = useFormik({\n    initialValues,\n    onSubmit: handleSubmitForm,\n  });\n\n  const onCancel = () => {\n    handleReset(initialValues);\n    handleCloseModal();\n  };\n\n  return (\n    <div className=\"NewCampaign\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"FormField\">\n          <label htmlFor=\"type\">\n            {intl.formatMessage(messages.type)}:\n            <select\n              id=\"type\"\n              name=\"type\"\n              defaultValue={values.type}\n              onBlur={handleChange}\n            >\n              <option value=\"views\">\n                {intl.formatMessage(messages.views)}\n              </option>\n              <option value=\"likes\">\n                {intl.formatMessage(messages.likes)}\n              </option>\n              <option value=\"subscribers\">\n                {intl.formatMessage(messages.subscribers)}\n              </option>\n              <option value=\"comments\">\n                {intl.formatMessage(messages.comments)}\n              </option>\n            </select>\n          </label>\n        </div>\n        <div className=\"FormField\">\n          <label htmlFor=\"link\">\n            {intl.formatMessage(messages.link)}:\n            <input\n              type=\"text\"\n              id=\"link\"\n              name=\"link\"\n              placeholder=\"https://www.youtube.com/watch?v=xxxxxxx\"\n              value={values.link}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        <div className=\"FormField\">\n          <label htmlFor=\"duration\">\n            {intl.formatMessage(messages.duration)}:\n            <input\n              type=\"number\"\n              id=\"duration\"\n              name=\"duration\"\n              value={values.duration}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        <div className=\"FormField\">\n          <label htmlFor=\"count\">\n            {intl.formatMessage(messages.count)}:\n            <input\n              type=\"number\"\n              id=\"count\"\n              name=\"count\"\n              value={values.count}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        <div className=\"ButtonHolder\">\n          <Button htmlType=\"submit\" type=\"primary\">\n            {intl.formatMessage(messages.submit)}\n          </Button>\n          <Button htmlType=\"button\" onClick={onCancel}>\n            {intl.formatMessage(messages.cancel)}\n          </Button>\n        </div>\n      </form>\n      <div>\n        <h5>\n          {intl.formatMessage(messages.cost)}: <span>3500</span>\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default NewCampaign;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'Campaigns.title',\n    defaultMessage: 'Campaigns',\n  },\n  caption: {\n    id: 'Campaigns.caption',\n    defaultMessage: 'Here you can see your campaigns',\n  },\n  createNew: {\n    id: 'Campaigns.createNew',\n    defaultMessage: 'Create new campaign',\n  },\n  started: {\n    id: 'Campaigns.started',\n    defaultMessage: 'Campaign started',\n  },\n  newCampaign: {\n    id: 'Campaigns.newCampaign',\n    defaultMessage: 'New campaign',\n  },\n});\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport moment from 'moment';\nimport { FaEllipsisV } from 'react-icons/fa';\n\nimport { Modal, Pagination, Section, StatusIcon } from '../../components';\n\nimport NewCampaign from '../Forms/NewCampaign/NewCampaign';\n\nimport messages from './messages';\n\nimport './Campaigns.scss';\n\nconst Campaigns: React.FC = () => {\n  const intl = useIntl();\n\n  const [createNewModalOpened, toggleCreateModal] = useState(false);\n\n  return (\n    <Section\n      buttonText={intl.formatMessage(messages.createNew)}\n      className=\"Campaigns\"\n      caption={intl.formatMessage(messages.caption)}\n      title={intl.formatMessage(messages.title)}\n      onButtonClick={() => toggleCreateModal(true)}\n    >\n      <ul className=\"List\">\n        <li>\n          <div className=\"Status\">\n            <StatusIcon />\n          </div>\n          <div className=\"Heading\">\n            <h5>5 Simple Steps To An Effective VIDEO Strategy</h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 14:30:59').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">0 / 3500</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n        <li>\n          <div className=\"Status\">\n            <StatusIcon name=\"progress\" />\n          </div>\n          <div className=\"Heading\">\n            <h5>\n              These 5 Simple VIDEO Tricks Will Pump Up Your Sales Almost\n              Instantly\n            </h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 14:35:15').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">200 / 799</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n        <li>\n          <div className=\"Status\">\n            <StatusIcon name=\"paused\" />\n          </div>\n          <div className=\"Heading\">\n            <h5>Why Some People Almost Always Make/Save Money With VIDEO</h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 14:48:23').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">10 / 100</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n        <li>\n          <div className=\"Status\">\n            <StatusIcon name=\"success\" />\n          </div>\n          <div className=\"Heading\">\n            <h5>9 Ways VIDEO Can Make You Invincible</h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 15:01:34').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">500 / 500</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n        <li>\n          <div className=\"Status\">\n            <StatusIcon name=\"archived\" />\n          </div>\n          <div className=\"Heading\">\n            <h5>What Can Instagramm Teach You About VIDEO</h5>\n            <p>\n              {intl.formatMessage(messages.started)}:{' '}\n              {moment('2021-01-05 15:17:57').format('DD.MM.YYYY HH:mm:ss')}\n            </p>\n          </div>\n          <div className=\"Progress\">300 / 500</div>\n          <div className=\"Actions\">\n            <button type=\"button\">\n              <FaEllipsisV />\n            </button>\n          </div>\n        </li>\n      </ul>\n      <Pagination pages={3} />\n      <Modal\n        isOpened={createNewModalOpened}\n        onClose={() => toggleCreateModal(false)}\n      >\n        <div>\n          <h4>{intl.formatMessage(messages.newCampaign)}</h4>\n          <NewCampaign\n            handleCloseModal={() => toggleCreateModal(false)}\n            handleSubmitForm={(data) => console.log(data)}\n          />\n        </div>\n      </Modal>\n    </Section>\n  );\n};\n\nexport default Campaigns;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'Dashboard.title',\n    defaultMessage: 'Dashboard',\n  },\n  caption: {\n    id: 'Dashboard.caption',\n    defaultMessage: 'Here you can see your overall statistics',\n  },\n  balance: {\n    id: 'Dashboard.balance',\n    defaultMessage: 'Balance',\n  },\n  membership: {\n    id: 'Dashboard.membership',\n    defaultMessage: 'Membership',\n  },\n  sessions: {\n    id: 'Dashboard.sessions',\n    defaultMessage: 'Sessions',\n  },\n  refill: {\n    id: 'Dashboard.refill',\n    defaultMessage: 'Refill',\n  },\n  upgrade: {\n    id: 'Dashboard.upgrade',\n    defaultMessage: 'Upgrade',\n  },\n  buyMore: {\n    id: 'Dashboard.buyMore',\n    defaultMessage: 'Buy more',\n  },\n  dailyBonuses: {\n    id: 'Dashboard.dailyBonuses',\n    defaultMessage: 'Daily bonuses',\n  },\n  exchangeViews: {\n    id: 'Dashboard.exchangeViews',\n    defaultMessage: 'Exchange views',\n  },\n  exchangeLikes: {\n    id: 'Dashboard.exchangeLikes',\n    defaultMessage: 'Exchange likes',\n  },\n  exchangeSubscriptions: {\n    id: 'Dashboard.exchangeSubscriptions',\n    defaultMessage: 'Exchange subscriptions',\n  },\n  exchangeComments: {\n    id: 'Dashboard.exchangeComments',\n    defaultMessage: 'Exchange comments',\n  },\n  levels: {\n    id: 'Dashboard.levels',\n    defaultMessage: 'Levels',\n  },\n  benefits: {\n    id: 'Dashboard.benefits',\n    defaultMessage: 'Benefits',\n  },\n  benefit1: {\n    id: 'Dashboard.benefit1',\n    defaultMessage: '450 credits through daily bonus',\n  },\n  nextLevel: {\n    id: 'Dashboard.nextLevel',\n    defaultMessage: 'Next level',\n  },\n  condition1: {\n    id: 'Dashboard.condition1',\n    defaultMessage: '1000 videos watched',\n  },\n  condition2: {\n    id: 'Dashboard.condition2',\n    defaultMessage: '10 campaigns started',\n  },\n  condition3: {\n    id: 'Dashboard.condition3',\n    defaultMessage: '1 referral',\n  },\n});\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport {\n  FaClock,\n  FaDollarSign,\n  FaRubleSign,\n  FaStar,\n  FaTag,\n} from 'react-icons/fa';\n\nimport { Card, List, ProgressBar, Section } from '../../components';\n\nimport messages from './messages';\n\nimport './Dashboard.scss';\n\nconst Dashboard: React.FC = () => {\n  const intl = useIntl();\n\n  return (\n    <Section\n      className=\"Dashboard\"\n      caption={intl.formatMessage(messages.caption)}\n      title={intl.formatMessage(messages.title)}\n    >\n      <Card\n        icon={<FaDollarSign />}\n        iconColor=\"22b07d\"\n        link={{\n          title: intl.formatMessage(messages.refill),\n          href: '/account/refill',\n        }}\n        title={intl.formatMessage(messages.balance)}\n        w={31}\n      >\n        <span className=\"BigText\">\n          <FaRubleSign />\n          75 254\n        </span>\n      </Card>\n      <Card\n        icon={<FaTag />}\n        link={{\n          title: intl.formatMessage(messages.upgrade),\n          href: '/account/plans',\n        }}\n        title={intl.formatMessage(messages.membership)}\n        w={31}\n      >\n        <span className=\"BigText\">Free</span>\n      </Card>\n      <Card\n        icon={<FaClock />}\n        link={{ title: intl.formatMessage(messages.buyMore), href: '/store' }}\n        iconColor=\"ff8700\"\n        title={intl.formatMessage(messages.sessions)}\n        w={31}\n      >\n        <span className=\"BigText\">5</span>\n      </Card>\n      <Card title={intl.formatMessage(messages.dailyBonuses)}>\n        <div className=\"Daily\">\n          <section>\n            <h5>{intl.formatMessage(messages.exchangeViews)}</h5>\n            <ProgressBar top={200} value={51} />\n          </section>\n          <section>\n            <h5>{intl.formatMessage(messages.exchangeLikes)}</h5>\n            <ProgressBar top={10} value={3} />\n          </section>\n          <section>\n            <h5>{intl.formatMessage(messages.exchangeSubscriptions)}</h5>\n            <ProgressBar top={10} value={6} />\n          </section>\n          <section>\n            <h5>{intl.formatMessage(messages.exchangeComments)}</h5>\n            <ProgressBar top={10} value={10} />\n          </section>\n        </div>\n      </Card>\n      <Card\n        className=\"Level\"\n        icon={<FaStar />}\n        iconColor=\"9471f6\"\n        title={`1 ${intl.formatMessage(messages.levels)}`}\n      >\n        <article className=\"Level_group\">\n          <h5>{intl.formatMessage(messages.benefits)}:</h5>\n          <List items={[intl.formatMessage(messages.benefit1)]} checked />\n        </article>\n        <article className=\"Level_group\">\n          <h5>{intl.formatMessage(messages.nextLevel)}:</h5>\n          <List\n            items={[\n              intl.formatMessage(messages.condition1),\n              intl.formatMessage(messages.condition2),\n              intl.formatMessage(messages.condition3),\n            ]}\n            checked\n          />\n        </article>\n      </Card>\n    </Section>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Exchange: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Exchange\">\n    Here will be exchange\n  </Section>\n);\n\nexport default Exchange;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Help: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Help\">\n    Here will be help\n  </Section>\n);\n\nexport default Help;\n","export default __webpack_public_path__ + \"static/media/avatar.433db046.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaCog } from 'react-icons/fa';\n\nimport avatar from './imgs/avatar.png';\n\nimport './Avatar.scss';\n\nconst Avatar: React.FC = () => (\n  <section className=\"Avatar\">\n    <img src={avatar} alt=\"Samantha Doe\" />\n    <div className=\"Info\">\n      <span className=\"Name\">Samantha Doe</span>\n      <span className=\"Mail\">samantha.doe@gmail.com</span>\n    </div>\n    <Link className=\"Settings\" to=\"/account\">\n      <FaCog />\n    </Link>\n  </section>\n);\n\nexport default Avatar;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  common: {\n    id: 'Layout.common',\n    defaultMessage: 'Common',\n  },\n  dashboard: {\n    id: 'Layout.dashboard',\n    defaultMessage: 'Dashboard',\n  },\n  campaigns: {\n    id: 'Layout.campaigns',\n    defaultMessage: 'Campaigns',\n  },\n  exchange: {\n    id: 'Layout.exchange',\n    defaultMessage: 'Exchange',\n  },\n  store: {\n    id: 'Layout.store',\n    defaultMessage: 'Store',\n  },\n  referrals: {\n    id: 'Layout.referrals',\n    defaultMessage: 'Referrals',\n  },\n  info: {\n    id: 'Layout.info',\n    defaultMessage: 'Info',\n  },\n  news: {\n    id: 'Layout.news',\n    defaultMessage: 'News',\n  },\n  help: {\n    id: 'Layout.help',\n    defaultMessage: 'Help',\n  },\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport {\n  FaBullhorn,\n  FaExchangeAlt,\n  FaHome,\n  FaPaperPlane,\n  FaQuestion,\n  FaShoppingCart,\n  FaUsersCog,\n} from 'react-icons/fa';\n\nimport { Badge } from '../../components';\n\nimport Avatar from './Avatar';\n\nimport messages from './messages';\n\nimport './Sidebar.scss';\n\nconst Sidebar: React.FC = () => {\n  const intl = useIntl();\n\n  return (\n    <aside className=\"Sidebar\">\n      <Avatar />\n      <h4>{intl.formatMessage(messages.common)}</h4>\n      <nav className=\"SideMenu\">\n        <ul>\n          <li>\n            <Link to=\"/dashboard\">\n              <Badge color=\"716fdf\">\n                <FaHome />\n              </Badge>\n              {intl.formatMessage(messages.dashboard)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/campaigns\">\n              <Badge color=\"36a6e3\">\n                <FaPaperPlane />\n              </Badge>\n              {intl.formatMessage(messages.campaigns)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/exchange\">\n              <Badge color=\"b24cc0\">\n                <FaExchangeAlt />\n              </Badge>\n              {intl.formatMessage(messages.exchange)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/store\">\n              <Badge color=\"21b17c\">\n                <FaShoppingCart />\n              </Badge>\n              {intl.formatMessage(messages.store)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/referrals\">\n              <Badge color=\"fd840b\">\n                <FaUsersCog />\n              </Badge>\n              {intl.formatMessage(messages.referrals)}\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <h4>{intl.formatMessage(messages.info)}</h4>\n      <nav className=\"SideMenu\">\n        <ul>\n          <li>\n            <Link to=\"/news\">\n              <Badge color=\"f7727b\">\n                <FaBullhorn />\n              </Badge>\n              {intl.formatMessage(messages.news)}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/help\">\n              <Badge color=\"9875f8\">\n                <FaQuestion />\n              </Badge>\n              {intl.formatMessage(messages.help)}\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\n\nimport Sidebar from './Sidebar';\n\nimport './Layout.scss';\n\ntype LayoutType = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<LayoutType> = ({ children }) => {\n  return (\n    <div className=\"Layout\">\n      <Sidebar />\n      <main>{children}</main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst News: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"News\">\n    Here will be news\n  </Section>\n);\n\nexport default News;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Referrals: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Referrals\">\n    Here will be referrals\n  </Section>\n);\n\nexport default Referrals;\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nconst Store: React.FC = () => (\n  <Section caption=\"Here will be caption\" title=\"Store\">\n    Here will be store\n  </Section>\n);\n\nexport default Store;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\n\nimport Account from '../Account/Account';\nimport Campaigns from '../Campaigns/Campaigns';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Exchange from '../Exchange/Exchange';\nimport Help from '../Help/Help';\nimport Layout from '../Layout/Layout';\nimport News from '../News/News';\nimport Referrals from '../Referrals/Referrals';\nimport Store from '../Store/Store';\n\nconst App: React.FC = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/account\" component={Account} exact />\n        <Route path=\"/dashboard\" component={Dashboard} exact />\n        <Route path=\"/campaigns\" component={Campaigns} exact />\n        <Route path=\"/exchange\" component={Exchange} exact />\n        <Route path=\"/store\" component={Store} exact />\n        <Route path=\"/referrals\" component={Referrals} exact />\n        <Route path=\"/news\" component={News} exact />\n        <Route path=\"/help\" component={Help} exact />\n      </Switch>\n      <Redirect to=\"/dashboard\" />\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './store';\nimport I18nProvider from './i18n/I18nProvider';\n\nimport App from './containers/App/App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <I18nProvider>\n          <App />\n        </I18nProvider>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}